// district distribution pipeline

  {% for num_of_bldg_group in range(sys_params["num_of_bldg_groups"]) %}

  Buildings.Experimental.DHC.Networks.Combined.UnidirectionalSeries
    disGrp_{{num_of_bldg_group}}(
    redeclare final package Medium = Medium,
    final nCon=nBuiGrp_{{num_of_bldg_group}},
    show_TOut=true,
    final mDis_flow_nominal=datDes_buiGrp_{{num_of_bldg_group}}.mPipDis_flow_nominal,
    final mCon_flow_nominal=datDes_buiGrp_{{num_of_bldg_group}}.mCon_flow_nominal,
    final dp_length_nominal=datDes_buiGrp_{{num_of_bldg_group}}.dp_length_nominal,
    final lDis=datDes_buiGrp_{{num_of_bldg_group}}.lDis,
    final lCon=datDes_buiGrp_{{num_of_bldg_group}}.lCon,
    final lEnd=datDes_buiGrp_{{num_of_bldg_group}}.lEnd,
    final allowFlowReversal=allowFlowReversalSer) "Distribution network"
    annotation (Placement(transformation(extent={{sys_params["bldg_groups_by_num"][num_of_bldg_group]["Placement"]["dis"]["extent_coo"]}})));

  Buildings.Fluid.Sensors.TemperatureTwoPort TDisWatSup_{{num_of_bldg_group}}(
    redeclare final package Medium = Medium,
  // design flow rate needs to be checked #SMA_TBD
  // !!!!!! important !!!!!! #SMA_TBD
    final m_flow_nominal=mPumDis_flow_nominal)
    "District water supply temperature after building group {{num_of_bldg_group}}"
    annotation (Placement(transformation(extent={{sys_params["bldg_groups_by_num"][num_of_bldg_group]["Placement"]["TDisWatSup"]["extent_coo"]}})));

  {% endfor %}

  Buildings.Fluid.Sensors.TemperatureTwoPort TDisWatRet(
    redeclare final package Medium = Medium,
  // design flow rate needs to be checked #SMA_TBD
  // !!!!!! important !!!!!! #SMA_TBD
    final m_flow_nominal=mPumDis_flow_nominal)
    "District water return temperature"
    annotation (Placement(transformation(extent={{sys_params["diagram_single_component_dict"]["district_loop"]["Placement"]["TDisWatRet"]["extent_coo"]}})));


  // ambient loop pump
  Buildings.Experimental.DHC.EnergyTransferStations.BaseClasses.Pump_m_flow pumDis(
    redeclare final package Medium = Medium,
  // design flow rate needs to be checked #SMA_TBD
  // !!!!!! important !!!!!! #SMA_TBD
    m_flow_nominal=mPumDis_flow_nominal)
    "Distribution pump"
    annotation (Placement(transformation(extent={{sys_params["diagram_single_component_dict"]["district_loop"]["Placement"]["pumDis"]["extent_coo"]}})));
  // expansion vessel
  Buildings.Fluid.Sources.Boundary_pT bou(
    redeclare final package Medium = Medium,
    T={{sys_params["ghe_parameters"]["soil"]["undisturbed_temp"]}}+273.15,
    nPorts=1)
    "Boundary pressure condition representing the expansion vessel"
    annotation (Placement(transformation(extent={{sys_params["diagram_single_component_dict"]["district_loop"]["Placement"]["bou"]["extent_coo"]}})));
