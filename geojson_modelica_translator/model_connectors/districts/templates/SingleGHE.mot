within {{ project_name }}.System;
model SingleGHE 
  {% raw %} "One-pipe system model with only one GHE component."
  extends Modelica.Icons.Example;
  replaceable package Medium = Buildings.Media.Water constrainedby
    Modelica.Media.Interfaces.PartialMedium
    "Medium in the component"
      annotation (choices(
        choice(redeclare package Medium = Buildings.Media.Water "Water"),
        choice(redeclare package Medium =
            Buildings.Media.Antifreeze.PropyleneGlycolWater (
              property_T=293.15,
              X_a=0.40)
              "Propylene glycol water, 40% mass fraction")));
  inner parameter
  Buildings.Experimental.DHC.Examples.Combined.BaseClasses.DesignDataSeries
    datDes(
	  {% endraw %}nBui={{ghe_data["building_numbers"]}},
    {% raw %}mPumDis_flow_nominal=95,
    mPipDis_flow_nominal=datDes.mPumDis_flow_nominal,
    dp_length_nominal=250,
    final mCon_flow_nominal=bui.ets.mSerWat_flow_nominal) // !!!This needs to be changed to the correct instance name once building model is moved out.
    "Design data"
    annotation (Placement(transformation(extent={{-140,80},{-120,100}})));
  parameter Buildings.Fluid.Geothermal.Borefields.Data.Borefield.Template borFieDat(
    final filDat=Buildings.Fluid.Geothermal.Borefields.Data.Filling.Bentonite(
        {% endraw %}kFil={{ghe_data["fill_conductivity"]}},
        cFil={{ghe_data["fill_specific_heat_capacity"]}},
        dFil={{ghe_data["fill_density"]}}),
    {% raw %}final soiDat=Buildings.Fluid.Geothermal.Borefields.Data.Soil.SandStone(
        {% endraw %}kSoi={{ghe_data["soil_conductivity"]}},
        cSoi={{ghe_data["soil_specific_heat_capacity"]}},
        dSoi={{ghe_data["soil_density"]}}),
    {% raw %}final conDat=
        Buildings.Fluid.Geothermal.Borefields.Data.Configuration.Example(
        dp_nominal=35000,
        {% endraw %}borCon={{ghe_data["borehole_configuration"]}},
        mBor_flow_nominal={{ghe_data["nominal_mass_flow_per_borehole"]}},
        hBor={{ghe_data["borehole_height"]}},
        rBor={{ghe_data["borehole_radius"]}},
        nBor={{ghe_data["number_of_boreholes"]}},
        rTub={{ghe_data["tube_radius"]}},
        kTub={{ghe_data["tube_conductivity"]}},
        eTub={{ghe_data["tube_thickness"]}},
        xC={{ghe_data["shank_spacing"]}}))  
        {% raw %}"Borefield data"
    annotation (choicesAllMatching=true,Placement(transformation(extent={{-110,80},
            {-90,100}})));
  parameter Integer nBui = datDes.nBui
    "Number of buildings connected to DHC system"
    annotation (Evaluate=true);
  {% endraw %}parameter String filNam="modelica://{{project_name}}/Loads/{{data['load_resources_path']}}/{{data['time_series']['filename']}}"
    {% raw %} "Library path of the file with loads as time series";

    // Template models
{% for model in models %}
  //
  // Begin Model Instance for {{ model.id }}
  // Source template: {{ model.instance_template_path }}
  //
{{ model.instance }}
  //
  // End Model Instance for {{ model.id }}
  //
{% endfor %}

  Buildings.Fluid.Geothermal.Borefields.OneUTube borFieUTub( //!!!Change the path to point to the template.
    redeclare package Medium = Medium,
    {% endraw %}gFunFilNam=Modelica.Utilities.Files.loadResource({{ghe_data["gfunction_file_path"]}}),
    nTimTot={{ghe_data["gfunction_file_rows"]}},
    {% raw %}dynFil=false,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    {% endraw %}TExt0_start={{ghe_data["initial_ground_temperature"]}}+273.15,
    {% raw %}borFieDat=borFieDat)
    "Borefield with a U-tube borehole configuration"
    annotation (Placement(transformation(extent={{0,0},{20,20}})));
  Buildings.Experimental.DHC.Loads.Combined.BuildingTimeSeriesWithETS bui[nBui](  //!!!Change the path to point to the template.
    final filNam = filNam)
    "Building and ETS"
    annotation (Placement(transformation(extent={{80,40},{100,60}})));

  // Model dependencies
{% for coupling in couplings %}
  //
  // Begin Component Definitions for {{ coupling.id }}
  // Source template: {{ coupling.coupling_definitions_template_path }}
  //
{{ coupling.component_definitions }}
  //
  // End Component Definitions for {{ coupling.id }}
  //
{% endfor %}

  
  // couplings
  Buildings.Controls.OBC.CDL.Continuous.Sources.Constant THeaWatSupMaxSet[nBui](k=bui.THeaWatSup_nominal) // !!!This needs to be changed to the correct instance name once building model is moved out.
    "Heating water supply temperature set point - Maximum value"
    annotation (Placement(transformation(extent={{-120,20},{-100,40}})));
  Buildings.Controls.OBC.CDL.Continuous.Sources.Constant TChiWatSupSet[nBui](k=bui.TChiWatSup_nominal) // !!!This needs to be changed to the correct instance name once building model is moved out.
    "Chilled water supply temperature set point"
    annotation (Placement(transformation(extent={{-120,-10},{-100,10}})));
  Buildings.Experimental.DHC.Networks.Combined.UnidirectionalSeries
    dis(
    redeclare final package Medium = Medium,
    final nCon=nBui,
    show_TOut=true,
    final mDis_flow_nominal=datDes.mPipDis_flow_nominal,
    final mCon_flow_nominal=datDes.mCon_flow_nominal,
    final dp_length_nominal=datDes.dp_length_nominal,
    final lDis=datDes.lDis,
    final lCon=datDes.lCon,
    final lEnd=datDes.lEnd,
    final allowFlowReversal=true) "Distribution network"
    annotation (Placement(transformation(extent={{70,0},{110,20}})));
  Buildings.Experimental.DHC.EnergyTransferStations.BaseClasses.Pump_m_flow pumDis(
      redeclare final package Medium = Medium, 
      m_flow_nominal=datDes.mPumDis_flow_nominal)
    "Distribution pump"
    annotation (Placement(transformation(
      extent={{10,-10},{-10,10}},
      rotation=270,
      origin={-44,-60})));
  Modelica.Blocks.Sources.Constant masFloMaiPum(k=datDes.mPumDis_flow_nominal)
    "Distribution pump mass flow rate"
    annotation (Placement(transformation(extent={{0,-70},{-20,-50}})));
  Buildings.Fluid.Sources.Boundary_pT expVes(
    redeclare final package Medium = Medium,
    T=283.15,   
    nPorts=2) "Expansion vessel"
    annotation (Placement(transformation(extent={{140,-76},{120,-56}})));
  Buildings.Controls.OBC.CDL.Continuous.Sources.Constant THeaWatSupMinSet[nBui](each k=
        28 + 273.15)
    "Heating water supply temperature set point - Minimum value"
    annotation (Placement(transformation(extent={{-120,50},{-100,70}})));
  Buildings.Controls.OBC.CDL.Continuous.Sources.Constant THotWatSupSet[nBui](k=fill(
        63 + 273.15, nBui))
    "Hot water supply temperature set point"
    annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
  Buildings.Controls.OBC.CDL.Continuous.Sources.Constant TColWat[nBui](k=fill(15
         + 273.15, nBui))
    "Cold water temperature"
    annotation (Placement(transformation(extent={{-120,-70},{-100,-50}})));


equation

  // Connections
{% for coupling in couplings %}
  //
  // Begin Connect Statements for {{ coupling.id }}
  // Source template: {{ coupling.connect_statements_template_path }}
  //
{{ coupling.connect_statements }}
  //
  // End Connect Statements for {{ coupling.id }}
  //
{% endfor %}

  connect(masFloMaiPum.y,pumDis. m_flow_in) annotation (Line(points={{-21,-60},{
          -32,-60}},                 color={0,0,127}));
  connect(dis.ports_bCon, bui.port_aSerAmb) annotation (Line(points={{78,20},{78,
          38},{74,38},{74,50},{80,50}}, color={0,127,255}));
  connect(bui.port_bSerAmb, dis.ports_aCon) annotation (Line(points={{100,50},{106,
          50},{106,38},{102,38},{102,20}}, color={0,127,255}));
  connect(THeaWatSupMinSet.y, bui.THeaWatSupMinSet)
    annotation (Line(points={{-98,60},{78,59}}, color={0,0,127}));
  connect(THeaWatSupMaxSet.y, bui.THeaWatSupMaxSet) annotation (Line(points={{-98,
          30},{-92,30},{-92,57},{78,57}}, color={0,0,127}));
  connect(TChiWatSupSet.y, bui.TChiWatSupSet) annotation (Line(points={{-98,0},{
          -86,0},{-86,55},{78,55}}, color={0,0,127}));
  connect(THotWatSupSet.y, bui.THotWatSupSet) annotation (Line(points={{-98,-30},
          {-80,-30},{-80,53},{78,53}}, color={0,0,127}));
  connect(TColWat.y, bui.TColWat) annotation (Line(points={{-98,-60},{-74,-60},{
          -74,36},{82,36},{82,38}}, color={0,0,127}));
  connect(pumDis.port_a, expVes.ports[1]) annotation (Line(points={{-44,-70},{-44,
          -80},{108,-80},{108,-64},{120,-64}}, color={0,127,255}));
  connect(expVes.ports[2], dis.port_bDisSup) annotation (Line(points={{120,-68},
          {108,-68},{108,-8},{122,-8},{122,10},{110,10}}, color={0,127,255}));
  connect(pumDis.port_b, borFieUTub.port_a)
    annotation (Line(points={{-44,-50},{-44,10},{0,10}}, color={0,127,255}));
  connect(borFieUTub.port_b, dis.port_aDisSup)
    annotation (Line(points={{20,10},{70,10}}, color={0,127,255}));
  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
            {100,100}})),                                        Diagram(
        coordinateSystem(preserveAspectRatio=false, extent={{-140,-100},{140,100}})),
    experiment(StopTime=86400, __Dymola_Algorithm="Cvode"),
    __Dymola_Commands(file="Resources/Scripts/System/SingleGHE.mos"
        "Simulate and Plot"));
end SingleGHE;
