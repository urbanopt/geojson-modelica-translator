within {{ district_within_path }};
model DistrictEnergySystem
  extends Modelica.Icons.Example;
  // District Parameters
  package MediumW=Buildings.Media.Water
    "Source side medium";
  {% if not is_ghe_district %}
  package MediumA=Buildings.Media.Air
    "Load side medium";
  // TODO: dehardcode these
  parameter Modelica.Units.SI.TemperatureDifference delChiWatTemDis(displayUnit="degC")=7;
  parameter Modelica.Units.SI.TemperatureDifference delChiWatTemBui(displayUnit="degC")=5;
  parameter Modelica.Units.SI.TemperatureDifference delHeaWatTemDis(displayUnit="degC")=12;
  parameter Modelica.Units.SI.TemperatureDifference delHeaWatTemBui(displayUnit="degC")=5;
  parameter Integer numberofchillers = 2;
  inner parameter Buildings.Experimental.DHC.Examples.Combined.BaseClasses.DesignDataSeries datDes(
    nBui=1,
    mPumDis_flow_nominal=95,
    mPipDis_flow_nominal=95,
    dp_length_nominal=250,
    epsPla=0.935,
    final mCon_flow_nominal={18})
    "Design data";
  {% endif %}


  {% if project_name == "district_multiple_ghe" %}

  parameter Boolean have_hotWat = false
    "Set to true if SHW load is included in the time series"
    annotation (Evaluate=true, Dialog(group="Configuration"));

  extends {{ district_within_path }}.DistrictEnergySystem_ghe_partial(
    {% for num_of_bldg_group in range(num_of_bldg_groups) %}

    redeclare Buildings.Experimental.DHC.Loads.Combined.BuildingTimeSeriesWithETS buiGrp_{{num_of_bldg_group}}[nBuiGrp_{{num_of_bldg_group}}](
      final filNam=filNam_buiGrp_{{num_of_bldg_group}},
      bui(have_hotWat=have_hotWat),
      ets(have_hotWat=have_hotWat)),


    datDes_buiGrp_{{num_of_bldg_group}}(
      nBui={{bldg_groups_by_num[num_of_bldg_group]["num_bldgs_in_group"]}},
      dp_length_nominal=250),

    {% endfor %}

    facMul = 1,
    redeclare package Medium = MediumW,
    mPumDis_flow_nominal={{10*sum_design_flow_rate_all_borfields}}
    );

  {% for num_of_bldg_group in range(num_of_bldg_groups) %}

  // This would work if the quotation marks were "" instead of ''
  parameter String filNam_buiGrp_{{num_of_bldg_group}} [nBuiGrp_{{num_of_bldg_group}}]=Modelica.Utilities.Files.loadResource(vector([
    {% for time_series_file_path in bldg_groups_by_num[num_of_bldg_group]["list_of_time_series_file_paths"] %}{% if loop.index != bldg_groups_by_num[num_of_bldg_group]["list_of_time_series_file_paths"]|length %}"{{time_series_file_path}}",
    {% else %}"{{time_series_file_path}}"])){% endif %}{% endfor %}
    "Library paths of the files with thermal loads as time series";

  Buildings.Controls.OBC.CDL.Reals.Sources.Constant THotWatSupSet_buiGrp_{{num_of_bldg_group}}[nBuiGrp_{{num_of_bldg_group}}](
    k=fill(63 + 273.15, nBuiGrp_{{num_of_bldg_group}}))
    "Hot water supply temperature set point"
    annotation (Placement(transformation(extent={{bldg_groups_by_num[num_of_bldg_group]["Placement"]["THotWatSupSet"]["extent_coo"]}})));

  Buildings.Controls.OBC.CDL.Reals.Sources.Constant TColWat_buiGrp_{{num_of_bldg_group}}[nBuiGrp_{{num_of_bldg_group}}](
    k=fill(15 + 273.15, nBuiGrp_{{num_of_bldg_group}}))
    "Cold water temperature"
    annotation (Placement(transformation(extent={{bldg_groups_by_num[num_of_bldg_group]["Placement"]["TColWat"]["extent_coo"]}})));

  {% endfor %}
  // design flow rate needs to be checked #SMA_TBD
  // !!!!!! important !!!!!! #SMA_TBD
  Buildings.Controls.OBC.CDL.Reals.MultiplyByParameter gai(k=mPumDis_flow_nominal)
    "Scale with nominal mass flow rate"
    {% raw %}annotation (Placement(transformation(extent={{-240,-170},{-220,-150}})));
    {% endraw %}
  Buildings.Controls.OBC.CDL.Reals.Sources.Constant One(k=1) "Temporary"
    {% raw %}annotation (Placement(transformation(extent={{-300,-170},{-280,-150}})));
    {% endraw %}

  {%else%}

  // Models
  {% for model in models %}
  //
  // Begin Model Instance for {{ model.id }}
  // Source template: {{ model.instance_template_path }}
  //
  {{ model.instance }}
  //
  // End Model Instance for {{ model.id }}
  //
  {% endfor %} // Model dependencies
  {% for coupling in couplings %}
  //
  // Begin Component Definitions for {{ coupling.id }}
  // Source template: {{ coupling.coupling_definitions_template_path }}
  //
  {{ coupling.component_definitions }}
  //
  // End Component Definitions for {{ coupling.id }}
  //
  {% endfor %}

  {% endif %}

equation

  {% if project_name == "district_multiple_ghe" %}

  {% for num_of_bldg_group in range(num_of_bldg_groups) %}

  connect(THotWatSupSet_buiGrp_{{num_of_bldg_group}}.y, buiGrp_{{num_of_bldg_group}}.THotWatSupSet)
    annotation (Line(points={{bldg_groups_by_num[num_of_bldg_group]["Line"]["THotWatSupSet_buiGrp"]["points"]}}));
  connect(TColWat_buiGrp_{{num_of_bldg_group}}.y, buiGrp_{{num_of_bldg_group}}.TColWat)
    annotation (Line(points={{bldg_groups_by_num[num_of_bldg_group]["Line"]["TColWat_buiGrp"]["points"]}}));




  {% endfor %}

  {% endif %}

// Connections
{% for coupling in couplings %}
//
// Begin Connect Statements for {{ coupling.id }}
// Source template: {{ coupling.connect_statements_template_path }}
//
{{ coupling.connect_statements }}
//
// End Connect Statements for {{ coupling.id }}
//
{% endfor %} annotation (
  experiment(
    StopTime=86400,
    Interval=3600,
    Tolerance=1e-06),
  Diagram(
    coordinateSystem(
      preserveAspectRatio=false,
  {% if project_name == "district_multiple_ghe" %}
      extent={{diagram_single_component_dict["diagram"]["Placement"]["diagram_extent"]["extent_coo"]}})),
  {%else%}
      extent={{ diagram.extent }})),
  {%endif%}
  Documentation(
    revisions="<html>
 <li>
 May 10, 2020: Hagar Elarga<br/>
Updated implementation to handle template needed for GeoJSON to Modelica.
</li>
</html>"));
end DistrictEnergySystem;
