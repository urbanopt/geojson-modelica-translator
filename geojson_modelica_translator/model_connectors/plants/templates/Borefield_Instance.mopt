  parameter Modelica.Units.SI.Length dhSto_{{ model.id }}(fixed=false,start=0.05,min=0.01)
    "Hydraulic diameter of the distribution pipe before each connection";
  parameter Modelica.Units.SI.MassFlowRate m_flow_nominal_{{ model.id }} = 
  {% if sys_params.district_system.fifth_generation.ghe_parameters.design.flow_type == 'borehole' %}
    {{ sys_params.district_system.fifth_generation.ghe_parameters.design.flow_rate * number_of_boreholes[graph.get_ghe_id(model.id)] }}
    {% else %}
    {{ sys_params.district_system.fifth_generation.ghe_parameters.design.flow_rate }}
    {% endif %}
    "Nominal mass flow rate of borefield pump";
  Buildings.DHC.ETS.BaseClasses.Pump_m_flow pumSto_{{ model.id }}(
    dp_nominal=30000,
    redeclare final package Medium = {{ globals.medium_w }},
    m_flow_nominal=m_flow_nominal_{{ model.id }})
    "Bore field pump"
  {% raw %}annotation (Placement(transformation(extent={{10,10},{-10,-10}},rotation=180,origin={-30,50})));
{% endraw %}
  Buildings.DHC.Networks.Connections.Connection1Pipe_R conSto_{{ model.id }}(
    redeclare final package Medium = {{ globals.medium_w }},
    final mDis_flow_nominal=datDes.mPipDis_flow_nominal,
    final mCon_flow_nominal=datDes.m_flow_nominal_{{ model.id }},
    lDis=0,
    final allowFlowReversal=allowFlowReversalSer,
    dhDis=dhSto_{{ model.id }})
    "Connection to the bore field (pressure drop lumped in plant and network model)"
  {% raw %}annotation (Placement(transformation(extent={{-10,-10},{10,10}},rotation=0,origin={-18,10})));
{% endraw %}
  Buildings.DHC.Networks.Controls.AgentPump1Pipe conBor_{{ model.id }}(
    yPumMin=0,
    dToff=0.45,
    k=1.1,
    Ti=600,
    uLowHea=0.25,
    uHighHea=0.5,
    uLowCoo=0.15,
    uHighCoo=0.4) "Borefield GHE pump controller"
  {% raw %}annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
{% endraw %}
  Buildings.Controls.OBC.CDL.Reals.MultiplyByParameter gai1_{{ model.id }}(k=datDes.m_flow_nominal_{{ model.id }})
    "Scale with nominal mass flow rate"
  {% raw %}annotation (Placement(transformation(extent={{-30,80},{-10,100}})));
{% endraw %}
  {{ model.modelica_type }} {{ model.id }}
  {% raw %}annotation (Placement(transformation(extent={{-10,0},{10,20}})));
{% endraw %}
