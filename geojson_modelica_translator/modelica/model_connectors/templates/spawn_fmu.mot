within {{project_name}}.Loads.{{model_name}};
model building
  "FMU Template for Spawn"
  extends Modelica.Icons.Example;
  package Medium = Buildings.Media.Air "Medium model";

  parameter String idfName=Modelica.Utilities.Files.loadResource(
    "modelica://{{project_name}}/Loads/{{data['load_resources_path']}}/{{data['idf']['filename']}}")
    "Name of the IDF file";
  parameter String weaName = Modelica.Utilities.Files.loadResource(
    "modelica://{{project_name}}/Loads/{{data['load_resources_path']}}/{{data['epw']['filename']}}")
    "Name of the weather file";

  {% raw %}Modelica.Blocks.Sources.Constant qConGai_flow(k=0) "Convective heat gain"
    annotation (Placement(transformation(extent={{-74,-10},{-54,10}})));
  Modelica.Blocks.Sources.Constant qRadGai_flow(k=0) "Radiative heat gain"
    annotation (Placement(transformation(extent={{-74,30},{-54,50}})));
  Modelica.Blocks.Routing.Multiplex3 multiplex3_1
    annotation (Placement(transformation(extent={{-28,-10},{-8,10}})));
  Modelica.Blocks.Sources.Constant qLatGai_flow(k=0) "Latent heat gain"
    annotation (Placement(transformation(extent={{-74,-50},{-54,-30}})));{% endraw %}
  {% for zone in data['thermal_zones'] %}
  Buildings.Experimental.EnergyPlus_9_6_0.ThermalZone {{zone['modelica_object_name']}}(
    redeclare package Medium = Medium,
    idfName=idfName,
    weaName=weaName,
    usePrecompiledFMU=false,
    fmuName = Modelica.Utilities.Files.loadResource("modelica://Buildings/Resources/src/EnergyPlus/FMUs/Zones1.fmu"),
    zoneName="{{zone['spawn_object_name']}}") "Thermal zone"
    {% raw %} annotation (Placement(transformation(extent={{20,40},{60,80}}))); {% endraw %}
  {% endfor %}
{% raw %}
equation
  connect(qRadGai_flow.y,multiplex3_1. u1[1])  annotation (Line(
      points={{-53,40},{-40,40},{-40,7},{-30,7}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(qConGai_flow.y,multiplex3_1. u2[1]) annotation (Line(
      points={{-53,0},{-30,0}},
      color={0,0,127},
      smooth=Smooth.None));
  connect(multiplex3_1.u3[1],qLatGai_flow. y)
    annotation (Line(points={{-30,-7},{-40,-7},{-40,-40},{-53,-40}},color={0,0,127}));{% endraw %}
  {% for zone in data['thermal_zones'] %}
  connect(multiplex3_1.y, {{zone['modelica_object_name']}}.qGai_flow)
    {% raw %}  annotation (Line(points={{-7,0},{20,0},{20,12},{38,12}}, color={0,0,127}));{% endraw %}
  {% endfor %}
  // TODO: determine how to handle the "lines"
{% raw %}
  annotation (Documentation(info="<html>
<p>
Template to connect n-thermal zones using GeoJSON to Modelica Translator
</p>
</html>", revisions="<html>
<ul><li>
March 24, 2019: Nicholas Long<br/>
First implementation.
</li>
</ul>
</html>"),
 __Dymola_Commands(file="modelica://Buildings/Resources/Scripts/Dymola/Experimental/EnergyPlus/Validation/RefBldgSmallOffice.mos"
        "Simulate and plot"),
experiment(
      StopTime=604800,
      Tolerance=1e-06),
    Diagram(coordinateSystem(extent={{-100,-160},{160,120}})),
    Icon(coordinateSystem(extent={{-100,-100},{100,100}})));{% endraw %}
end building;
