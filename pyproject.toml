[tool.poetry]
name = "geojson-modelica-translator"
version = "0.4.1"
description = "Package for converting GeoJSON to Modelica models for Urban Scale Analyses."
authors = ["URBANopt DES Team <nicholas.long@nrel.gov>"]
license = "BSD-4-Clause"

readme = "README.rst"

homepage = "https://docs.urbanopt.net"
repository = "https://github.com/urbanopt/geojson-modelica-translator"
documentation = "https://docs.urbanopt.net/geojson-modelica-translator/"
keywords = ["URBANopt", "Modelica", "GeoJSON", "Physics-based Modeling"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
packages = [
    { include = "management" },
    { include = "geojson_modelica_translator"}
]

[tool.poetry.dependencies]
# Urbanopt SDK requires Python 3.10 as of UOv0.9.0
python = ">=3.8, <3.11"
BuildingsPy = "4.0.0"
click = "8.1.3"
geojson = "2.5.0"
jinja2 = "3.1.2"
jsonpath-ng = "1.5.3"
jsonschema = "~4.17"
modelica-builder = "^0.2.2"
pandas = "1.5.2"
requests = "2.27.1"
teaser = "0.7.5"
#teaser = { git = "https://github.com/urbanopt/TEASER.git", branch = "development"}


[tool.poetry.dev-dependencies]
autopep8 = "~2.0"
coveralls = "~3.3"
mypy = "~0.961"
pre-commit = "~2.21"
pytest = "~7.2"
pytest-cov = "~4.0"
sphinx = "~5.0"
sphinx_rtd_theme = "~1.0.0"
sphinx-jsonschema = "~1.19"
syrupy = "~3.0"
toml = "~0.10"
tox = "~4.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
multi_line_output = 3

[tool.poetry.scripts]
uo_des = 'management.uo_des:cli'
format_modelica_files = 'management.format_modelica_files:fmt_modelica_files'
update_schemas = 'management.update_schemas:update_schemas'
check_sys_params = 'management.check_sys_params:check_sys_params'

[tool.pytest.ini_options]
# There is a bug/issue with pytest and click where the test tries to write to the
# log after the log file has been closed. This causes the test to fail. The --capture=no
# is a workaround for this issue for now see https://github.com/pytest-dev/pytest/issues/5502#issuecomment-1020761655.
addopts = "--capture=no"
log_cli = true
log_cli_level = "DEBUG"
markers = [
    "simulation: marks tests that run a simulation with docker/optimica (deselect with '-m \"not simulation\"'). All simulations now require MSL v4.",
    "compilation: marks tests that are for compiling a simulation with docker/optimica (deselect with '-m \"not compilation\"'). All simulations now require MSL v4."
]
