{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>The GeoJSON Modelica Translator (GMT) is a one-way trip from GeoJSON in combination with a well-defined instance of the system parameters schema to a Modelica package with multiple buildings loads, energy transfer stations, distribution networks, and central plants. The project will eventually allow multiple paths to build up different district heating and cooling system topologies; however, the initial implementation is limited to 4GDHC and 5GDHC.</p> <p>The project is motivated by the need to easily evaluate district energy systems. The goal is to eventually cover the various generations of heating and cooling systems as shown in the figure below. The need to move towards 5GDHC systems results in higher efficiencies and greater access to additional waste-heat sources.</p> <p></p>"},{"location":"#architecture-overview","title":"Architecture Overview","text":"<p>The GMT is designed to enable \"easy\" swapping between building loads, district systems, and network topologies. Some of these functionalities are more developed than others, for instance swapping between building loads is currently fleshed out; however, swapping between a fourth generation and a fifth generation system has yet to be fully implemented.</p> <p>The diagram below is meant to illustrate the future proposed interconnectivity and functionality of the GMT project.</p> <p></p> <p>As shown in the image, there are multiple building loads that can be deployed with the GMT and are described in the Building Load Models section below. These models, and the associated design parameters, are required to create a fully runnable Modelica model. The GMT leverages two file formats for generating the Modelica project and are the GeoJSON feature file and a System Parameter JSON file. Descriptions of these file are available in the Input File Documentation and in the various example and test projects.</p>"},{"location":"#building-load-models","title":"Building Load Models","text":"<p>The building loads can be defined multiple ways depending on the fidelity of the required models. Each of the building load models are easily replaced using configuration settings within the System Parameters file. The models can have mixed building load models, for example the district system can have 3 time series models, an RC model, and a detail Spawn model. The 4 different building load models include:</p> <ul> <li>Time Series in Watts: This building load is the total heating, cooling, and domestic hot water loads represented in a CSV type file (MOS file). The units are Watts and should be reported at an hour interval; however, finer resolution is possible. The load is defined as the load seen by the ETS.</li> <li>Time Series as mass flow rate and delta temperature: This building load is similar to the other Time Series model but uses the load as seen by the ETS in the form of mass flow rate and delta temperature. The file format is similar to the other Time Series model but the columns are mass flow rate and delta temperature for heating and cooling separately.</li> <li>RC Model: This model leverages the TEASER framework to generate an RC model with the correct coefficients based on high level parameters that are extracted from the GeoJSON file including building area and building type.</li> <li>Spawn of EnergyPlus: This model uses EnergyPlus models to represent the thermal zone heat balance portion of the models while using Modelica for the remaining components. Spawn of EnergyPlus is still under development and currently only works on Linux-based systems.</li> </ul>"},{"location":"authors/","title":"AUTHORS","text":""},{"location":"authors/#contributors","title":"Contributors","text":"Author Author's org GitHub Profile Nicholas Long NREL nllong Nathan Moore NREL vtnate Ted Summer Formerly Devetry/DEPT macintoshpie Katherine Fleming NREL kflemin Amy Allen NREL amyeallen1 Jiazhen Ling NREL jiazhenling Tanushree Charan NREL tanushree04 Jing Wang NREL / CU Boulder JingWang-CUB Antoine Gautier LBNL AntoineGautier Hagar Elarga NREL helarga Yanfei Li NREL YanfeiNREL"},{"location":"changelog/","title":"Change Log","text":""},{"location":"changelog/#version-091","title":"Version 0.9.1","text":"<ul> <li>Fix incorrect link to documentation site by @vtnate</li> </ul>"},{"location":"changelog/#version-090","title":"Version 0.9.0","text":""},{"location":"changelog/#exciting-new-features","title":"Exciting New Features \ud83c\udf89","text":"<ul> <li>Upgrade OpenModelica &amp; MBL by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/641</li> <li>Support Python 3.13 by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/676</li> </ul>"},{"location":"changelog/#other-changes","title":"Other Changes","text":"<ul> <li>Putting GHEs downstream of the buildings by @JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/677</li> <li>Order horizontal piping correctly between buildings by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/679</li> <li>Allow skipping GeoJSON validation by @nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/681</li> <li>Switch to MkDocs by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/664</li> </ul> <p>Full Changelog: https://github.com/urbanopt/geojson-modelica-translator/compare/v0.8.0...v0.9.0</p>"},{"location":"changelog/#version-080","title":"Version 0.8.0","text":""},{"location":"changelog/#exciting-new-features_1","title":"Exciting New Features \ud83c\udf89","text":"<ul> <li>Add default cop values for 5G district heat pump efficiencies by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/640</li> <li>Support international weather locations by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/654</li> <li>Support multiple GHEs in a single district by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/644</li> <li>Adds method to process modelica results by @tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/646</li> <li>Simplify sys params to closer match reality by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/659</li> <li>Templates and tests for horizontal piping modeling by @JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/627</li> <li>Support single building DES templates by @nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/670</li> </ul>"},{"location":"changelog/#other-changes_1","title":"Other Changes","text":"<ul> <li>Improve cli typing &amp; validation by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/662</li> <li>Add detail to Docker setup docs for Windows users by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/643</li> <li>Use the correct ETS heat pump COP by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/642</li> <li>Use feature ids in load names instead of simple_uuid by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/652</li> <li>Remove alfalfa from conftest.py by @nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/665</li> <li>Update version of Jinja by @nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/667</li> <li>Clean up sys-param code that reads parameters by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/668</li> </ul> <p>Full Changelog: https://github.com/urbanopt/geojson-modelica-translator/compare/v0.7.0...v0.8.0</p>"},{"location":"changelog/#version-070","title":"Version 0.7.0","text":""},{"location":"changelog/#exciting-new-features_2","title":"Exciting New Features \ud83c\udf89","text":"<ul> <li>Rename new modelica models to clarify MBL version by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/618</li> <li>Minor improvements to the CLI by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/620</li> <li>Enable more detail when specifying district types by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/622</li> <li>Force a dummy value for SHW in modelica loads even if not present by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/626</li> </ul>"},{"location":"changelog/#other-changes_2","title":"Other Changes","text":"<ul> <li>Move README and CHANGELOG to markdown and update deployment notes by @nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/615</li> <li>Update instructions for releasing documentation publicly by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/617</li> <li>Specify units of GHE flow_rate by @vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/623</li> <li>Code documentation cleanup by @nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/631</li> <li>Expose borehole variables by @nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/630</li> </ul> <p>Full Changelog: https://github.com/urbanopt/geojson-modelica-translator/compare/v0.6.0...v0.7.0</p>"},{"location":"changelog/#version-060","title":"Version 0.6.0","text":""},{"location":"changelog/#exciting-new-features_3","title":"Exciting New Features \ud83c\udf89","text":"<ul> <li>Python 311 by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/518</li> <li>add max_electrical_load to building sys-param data by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/530</li> <li>Modifications for GHE by \\@tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/526</li> <li>Add Level 1 5G DES system by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/539</li> <li>Set SWH peak to 1/10th of space heating or min 5000W by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/542</li> <li>Added GHE templates - Issue511 by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/533</li> <li>Add MOS file wrapper and size the 5G mass flow rate by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/548</li> <li>Add OpenModelica compatibility by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/516</li> <li>Modify GHE params by \\@tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/537</li> <li>Fixing borefield test breaks due to schema changes by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/550</li> <li>Updating GHE Parameters: Modifying GHE Parameters schema and example files by \\@tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/551</li> <li>Enable compile &amp; simulate with OpenModelica in Docker by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/545</li> <li>Enhance and expand microgrid templates and code by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/549</li> <li>Enable numberOfIntervals run option by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/562</li> <li>Breakout package parser class by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/566</li> <li>Add a new GHE district test with new network template models by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/561</li> <li>Add GHE Properties to System Parameter File by \\@tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/570</li> <li>Use <code>filNam</code> parameter for TEASER loads and add within parsing to PackageParser by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/574</li> <li>Add new <code>ModelicaProject</code> class by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/575</li> <li>Add Dymola runner by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/577</li> <li>Template initial microgrid subsystem example by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/569</li> <li>Microgrid heating by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/586</li> <li>Change how ModelicaPaths are built so they also work on Windows computers by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/590</li> <li>Refactoring and enhancing to support multiple GHEs in a single district by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/601</li> <li>Replace shell script with call directly to docker by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/607</li> <li>Implement a PyPI release workflow by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/603</li> <li>Support Python 3.12 by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/593</li> <li>Add district nominal pump head to system parameters file by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/610</li> </ul>"},{"location":"changelog/#other-changes_3","title":"Other Changes","text":"<ul> <li>specify ports for each time series building in instance template by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/525</li> <li>Update license language by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/529</li> <li>Read correct data from sys-param for microgrid electrical load by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/560</li> <li>Prep for prerelease 0.6.0 by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/578</li> <li>initialize empty variable before potential use by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/579</li> <li>Include 5G partial model in generation by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/580</li> <li>Allow skipping of specific files when cloning a modelica project by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/584</li> <li>Add a quick fix for reading gfunction.csv from ghe_id subfolder by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/589</li> <li>Move modelica methods from GMT to modelica-builder by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/591</li> <li>Add model for controlled distribution loop mass flow rate by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/594</li> <li>Allow user to specify Modelica load filename by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/599</li> <li>Decouple gain for distribution and ghx mass flow rates by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/600</li> <li>Closed-loop changes to existing test_single_ghe test by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/597</li> <li>Update documentation for version 0.6.0 by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/592</li> <li>Use Ubuntu 20 and fix CHP model by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/611</li> </ul> <p>Full Changelog: https://github.com/urbanopt/geojson-modelica-translator/compare/v0.5.0...v0.6.0</p>"},{"location":"changelog/#version-050","title":"Version 0.5.0","text":""},{"location":"changelog/#exciting-new-features_4","title":"Exciting New Features \ud83c\udf89","text":"<ul> <li>Python 3.11 support by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/518</li> <li>Add max_electrical_load to building sys-param data by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/530</li> <li>Modifications for GHE by \\@tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/526</li> <li>Add Level 1 - 5G DES system by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/539</li> <li>Set SWH peak to 1/10th of space heating or min 5000W by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/542</li> <li>Added GHE templates by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/533</li> <li>Add OpenModelica compatibility by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/516</li> <li>Modify GHE params by \\@tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/537</li> <li>Enable compile &amp; simulate with OpenModelica in Docker by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/545</li> </ul>"},{"location":"changelog/#other-changes_4","title":"Other Changes","text":"<ul> <li>Specify ports for each time series building in instance template by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/525</li> <li>Update license language by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/529</li> <li>Add MOS file wrapper and size the 5G mass flow rate by \\@nllong in https://github.com/urbanopt/geojson-modelica-translator/pull/548</li> <li>Fixing borefield test breaks due to schema changes by \\@JingWang-CUB in https://github.com/urbanopt/geojson-modelica-translator/pull/550</li> <li>Updating GHE Parameters: Modifying GHE Parameters schema and example files by \\@tanushree04 in https://github.com/urbanopt/geojson-modelica-translator/pull/551</li> <li>Enhance and expand microgrid templates and code by \\@vtnate in https://github.com/urbanopt/geojson-modelica-translator/pull/549</li> </ul>"},{"location":"changelog/#new-contributors","title":"New Contributors","text":"<ul> <li>\\@tanushree04 made their first contribution in https://github.com/urbanopt/geojson-modelica-translator/pull/526</li> </ul> <p>Full Changelog: https://github.com/urbanopt/geojson-modelica-translator/compare/0.4.1...v0.5.0</p>"},{"location":"changelog/#version-041","title":"Version 0.4.1","text":""},{"location":"changelog/#whats-changed","title":"What\\'s Changed","text":"<ul> <li>Cli bug fixes</li> <li>Detailed models</li> <li>End-of-year updates to GMT docs</li> <li>Remove support for 3.7 in development, update development dependencies</li> <li>Update copyrights to 2023</li> </ul>"},{"location":"changelog/#version-040","title":"Version 0.4.0","text":"<p>As of version 0.4.0 changes will be published using Github automated formatting at the release itself. Those changes are copied here.</p>"},{"location":"changelog/#exciting-new-features_5","title":"Exciting New Features \ud83c\udf89","text":"<ul> <li>Redeclare the teaser model to use buildings.media.air medium</li> <li>Fmu runner</li> <li>Spawn docker named args</li> <li>Compile &amp; run with Spawn &amp; Optima</li> <li>Microgrid lines</li> <li>Add 5G to System Parameters file</li> <li>Weather file at top level</li> <li>Test with 3.10</li> <li>4G or 5G timeseries in Dymola</li> </ul>"},{"location":"changelog/#other-changes_5","title":"Other Changes","text":"<ul> <li>Breakout run in docker command</li> <li>Better error message if modelica timeseries files from sdk are not found</li> <li>Break out build and simulate tests</li> <li>Use Modelica Buildings Library (MBL) v9.0.0</li> <li>Point tests to latest mbl release</li> <li>Cli less brittle</li> <li>Run compilation tasks on CI using spawn Modelica and Optimica</li> <li>Update schema.json</li> </ul>"},{"location":"changelog/#version-030","title":"Version 0.3.0","text":"<ul> <li>Use MBL v9 (current master branch) for all models. Note that JModelica no longer works with this version. User must now use either Dymola or Optimica. A new solution is forthcoming.</li> <li>Update unit tests to break out building the tests and running the tests.</li> </ul>"},{"location":"changelog/#version-023","title":"Version 0.2.3","text":"<ul> <li>Add GMT Lib methods for Level 1 translation of Modelica-templated objects (for microgrid).</li> <li>Use MBL v9 (current master branch) for GMT Lib. The DES models still require the usage of the <code>issue2204_gmt_mbl</code> branch.</li> <li>Updated Jinja and Sphinx dependencies. Jinja is now a required dependency (no longer a testing dependency).</li> <li>Fix bug in CLI where commands only work in Unix-like operating systems, not Windows</li> <li>Fix bug in TEASER model for four-element RC models.</li> <li>Fix bug in TEASER infinite heating/cooling coupling template.</li> </ul>"},{"location":"changelog/#version-022","title":"Version 0.2.2","text":"<ul> <li>Fix bug in CLI which required the user to be in a specific directory to run. Updated CLI is more flexible.</li> <li>Update documentation.</li> </ul>"},{"location":"changelog/#version-021","title":"Version 0.2.1","text":"<ul> <li>New command line interface (CLI) for scaffolding project using results of URBANopt SDK\\'s OpenStudio results</li> <li>New script for converting CSV file into Modelica mos file.</li> <li>Cleanup of System Parameter Schema including renaming elements, adding definitions, and adding units</li> <li>Redesign the couplings and remove redundant model connector files</li> <li>Promote DES configuration variables to be accessible in the System Parameter file</li> <li>Extended flexibility of setting parameter values programmatically for Teaser, TimeSeries, and Spawn building load models models</li> <li>Upgrade to TEASER 0.7.5</li> <li>Upgrade to MBL 2.1.0</li> <li>Migrate to Poetry for development</li> <li>Add regression testing to full district energy system</li> <li>Auto-layout of templated components. This is a work in progress and  the next version will include \\\"pooling\\\" of components.</li> </ul>"},{"location":"changelog/#version-020","title":"Version 0.2.0","text":"<ul> <li>Add ETS data for indirect cooling to system parameters schema</li> <li>Add district system example</li> <li>Add time series model using mass flow rates and temperatures</li> <li>Add district heating (1GDH and 4GDH) and heating indirect ETS</li> <li>Add district cooling (4GDC) and cooling indirect ETS</li> <li>Add distribution network</li> <li>Update scaffolding to allow for mixed models</li> <li>Create initial documentation</li> </ul>"},{"location":"changelog/#version-010","title":"Version 0.1.0","text":"<p>This is the initial release of the package and includes the following functionality:</p> <ul> <li>Initial implementation of a ModelicaRunner to call a Docker container to run the model.</li> <li>Create an RC model using Modelica 3.2.x, Modelica Buildings Library 7.0 and TEASER 0.7.2.</li> <li>Create a Spawn-based models which loads an IDF file.</li> </ul>"},{"location":"developer_resources/","title":"Developer Resources","text":""},{"location":"developer_resources/#tests","title":"Tests","text":"<p>Tests are run with pytest, e.g.,</p> <pre><code>poetry run pytest\n</code></pre>"},{"location":"developer_resources/#snapshot-testing","title":"Snapshot Testing","text":"<p>Some tests use syrupy to compare generated modelica models to saved \"snapshots\" of the models (saved as .ambr files).</p> <p>Snapshots should only be updated if we have changed how a model is generated, and we know the new version of the model is the correct version. To update all snapshots, you can run the following and commit the new snapshot files.</p> <pre><code>poetry run pytest --snapshot-update\n</code></pre>"},{"location":"developer_resources/#design-overview","title":"Design Overview","text":"<p>The GMT is designed to create an arbitrary number of user-configured models attached to other user-configured models to represent a district energy system. GMT has \"building blocks\" that it uses to define and attach models, which currently include: Energy Transfer Stations (ETSs), Loads, Networks, and Plants.</p> <p>Each block type is a collection of models, e.g., the Loads includes time series and spawn models. A model in GMT refers to an abstracted Modelica model. It generates Modelica code (the Modelica model) and is used to define attachments to other models.</p> <p>Each block type can attach to other specific block types. For example, you can attach a load to an ETS, but you cannot attach a load to a network. However, some models (i.e., 5G) have an ETS embedded in them.</p> <p>Each block type has a corresponding directory inside of <code>geojson_modelica_translator/model_connectors</code>, which contains its different model types (e.g., for Loads it contains the Time Series model and others).</p> <p>Because models are different, even within a block type (e.g., different properties and maybe even ports), the GMT uses the concept of couplings for attaching models. Couplings define how two specific models attach in modelica. For example, a coupling could define how the time series load actually attaches to the heating indirect ETS.</p> <p>As an aside, if the GMT reached a point where all models within a block type implemented the same interface then couplings would not be necessary.</p>"},{"location":"developer_resources/#getting-started-as-a-developer","title":"Getting Started as a Developer","text":"<p>There are a few steps that are imperative to complete when starting as a developer of the GMT. First, make sure to follow the detailed instructions for Docker Installation in the Getting Started guide.</p> <p>Follow the instructions below in order to configure your local environment:</p> <ul> <li> <p>Get the Modelica Buildings Library. See the documentation at MBL Installation</p> </li> <li> <p>Clone the GMT repo into a working directory</p> </li> <li>(optional/as-needed) Add Python 3 to the environment variables</li> <li>As general guidance, we recommend using virtual environments to avoid dependencies colliding between your Python projects. venv is the Python native solution that will work everywhere, though other options may be more user-friendly:<ul> <li>pyenv and the virtualenv plugin work together nicely for Linux/Mac machines</li> <li>virtualenv</li> <li>miniconda</li> </ul> </li> <li>For developers, dependency management is through Poetry. Poetry can be acquired by running <code>pip install poetry</code>.</li> <li>If you haven't already installed a virtual environment, Poetry will automatically create a simplified environment for your project.</li> <li>Move to the GMT root directory and run <code>poetry install</code> to install the dependencies.</li> <li>Verify that everything is installed correctly by running <code>poetry run pytest -m 'not compilation and not simulation and not dymola'</code>. This will run all the unit and integration tests.</li> <li>Follow the instructions below to install pre-commit.</li> <li>To confirm that models will build and simulate, you can run</li> </ul> <pre><code>poetry run pytest -m 'not dymola' --cov-report term-missing --cov .\n</code></pre> <p>The tests should all pass assuming the libraries, Docker, and all dependencies are installed correctly on your computer. Also, there will be a set of Modelica models that are created, simulated, and persisted into the <code>tests/GMT_Lib/output</code> folder and the <code>tests/model_connectors/output</code> folder.</p>"},{"location":"developer_resources/#pre-commit","title":"Pre-commit","text":"<p>This project uses pre-commit to ensure code consistency. To enable pre-commit for your local development process, run the following from the command line from within the git checkout of the GMT:</p> <pre><code>pre-commit install\n</code></pre> <p>To run pre-commit against the files without calling git commit, then run the following. This is useful when cleaning up the repo before committing. CI will fail if pre-commit hasn't been run locally.</p> <pre><code>pre-commit run --all-files\n</code></pre>"},{"location":"developer_resources/#adding-new-models","title":"Adding New Models","text":"<p>To add a new model you have to do the following:</p> <ol> <li> <p>Define the model's python class: First, create a new python file and class under its respective directory in model_connectors. Follow the patterns of existing classes.</p> </li> <li> <p>Create coupling files: For every model that can be linked to, create a <code>&lt;ModelA&gt;_&lt;ModelB&gt;</code> directory in the couplings directory. The two files ComponentDefinitions.mopt and ConnectStatements.mopt must exist in this directory. See more information on the content of the coupling files below in the Couplings sections.</p> </li> <li> <p>Create the instance file: In the templates directory, you must define <code>&lt;ModelName&gt;_Instance.mopt</code> which is the template that instantiates the system in the district model.</p> </li> </ol> <p>See the notes below for more information.</p>"},{"location":"developer_resources/#couplings","title":"Couplings","text":"<p>A coupling defines the Modelica code necessary for interfacing two specific models, e.g., a time series load and heating indirect ETS. Each coupling is unique in its requirements:</p> <ul> <li>What additional components are necessary, for example there might be some sensor between system A and B, or maybe B requires a pump when A is a specific model type</li> <li>What ports are connected, for example connecting ports of model A and model B</li> </ul> <p>Thus each coupling must define two template files, <code>ComponentDefinitions.mopt</code> and <code>ConnectStatements.mopt</code>, respectively. These files must be placed in the directory <code>couplings/templates/&lt;model A&gt;_&lt;model B&gt;/</code>. In general, the order of the names should follow the order of system types if you laid out the district system starting with loads on the far left and plants on the far right (e.g., load before ETS, ETS before network, network before plant).</p>"},{"location":"developer_resources/#district-system","title":"District system","text":"<p>A district system is the model which incorporates all of the models and their couplings.</p>"},{"location":"developer_resources/#templating-flow","title":"Templating Flow","text":"<p>When rendering the district system model file, it must:</p> <ol> <li>call to_modelica() for each model to generate its Modelica code</li> <li>render the coupling partial templates (ie the Modelica code required for couplings)</li> <li>render the model instance definition (ie the Modelica code which instantiates the model)</li> <li>insert the coupling partials and model instance definitions into the district Modelica file</li> </ol> <p>Refer to the district template and the district code for reference.</p> <p>Each templating step has access to a particular set of variables, which is defined below.</p>"},{"location":"developer_resources/#summary-of-templating-contexts","title":"Summary of Templating Contexts","text":""},{"location":"developer_resources/#model-definition","title":"Model Definition","text":"<p>Each model generates one or more Modelica files to define its model. The templating context is implementation dependent, so refer to its <code>to_modelica()</code> method.</p>"},{"location":"developer_resources/#coupling-component-definitions","title":"Coupling Component Definitions","text":"<p>This is the template which defines new components/variables necessary for a coupling. More specifically, these are the partial template files at <code>model_connectors/couplings/templates/&lt;coupling name&gt;/ComponentDefinitions.mopt</code>. These templates have access to:</p> <ul> <li><code>globals</code>: global variables (those defined in the district.py, such as medium_w = MediumW)</li> <li><code>coupling</code>: contains the coupling id, as well as references to the coupled models under their respective types (e.g., coupling.load.id or coupling.network.id). You should append <code>coupling.id</code> to any variable identifiers to prevent name collisions. For example, instead of just writing <code>parameter Modelica.Units.SI.MassFlowRate mDis_flow_nominal</code> you should do <code>parameter Modelica.Units.SI.MassFlowRate mDis_flow_nominal_{{ coupling.id }}</code> as well as any place where you would reference that variable.</li> <li><code>graph</code>: an instance of the CouplingGraph class, where all couplings are located. It can provide useful methods for accessing couplings throughout the entire system. Refer to the python class to see what it can do.</li> <li><code>sys_params</code>: an object containing data from the system parameters file</li> <li><code>district_system</code>: contains the data from the district_system portion of the system parameters file</li> <li><code>building</code>: if the coupling includes a load, this object will be included as well -- if there's no as part of the coupling this object will NOT be present. It contains the building-specific system parameters pulled from the system parameters JSON file.</li> </ul>"},{"location":"developer_resources/#coupling-connect-statements","title":"Coupling Connect Statements","text":"<p>This is the template which defines connect statements to be inserted into the equation section. More specifically, these are the partial template files at <code>model_connectors/couplings/templates/&lt;coupling name&gt;/ConnectStatements.mopt</code>. These templates have access to:</p> <ul> <li><code>globals</code>: same as Coupling Component Definitions context</li> <li><code>coupling</code>: same as Coupling Component Definitions context. Just like with the component definitions template, you should use the coupling.id to avoid variable name collisions.</li> <li><code>graph</code>: same as Coupling Component Definitions context</li> <li><code>sys_params</code>: same as Coupling Component Definitions context</li> </ul>"},{"location":"developer_resources/#model-instance","title":"Model Instance","text":"<p>This template is used to declare a model instance.</p> <ul> <li><code>globals</code></li> <li><code>graph</code></li> <li><code>couplings</code>: contains each coupling the model is associated with. For example, if our ETS was coupled to a load and network, couplings would look like <code>{ load_couplings: [&lt;load coupling&gt;], network_couplings: [&lt;network coupling&gt;] }</code>. This can be used to access coupling and model ids.</li> <li><code>model</code>: contains info about the model instance, including <code>modelica_type</code> and <code>id</code>. These should be used to define the model, for example <code>{{ model.modelica_type }} {{ model.id }}(...)</code></li> <li><code>sys_params</code>: same as Coupling Component Definitions context</li> </ul>"},{"location":"developer_resources/#simulation-mapper-class-translator","title":"Simulation Mapper Class / Translator","text":"<p>The Simulation Mapper Class can operate at multiple levels:</p> <ol> <li>The GeoJSON level -- input: geojson, output: geojson+</li> <li>The Load Model Attachment -- input: geojson+, output: multiple files related to building load models (spawn, rom, csv)</li> <li>The Translation to Modelica -- input: custom format, output: .mo (example inputs: geojson+, system design parameters). The translators are implicit to the load model connectors as each load model requires different parameters to calculate the loads.</li> </ol> <p>In some cases, the Level 3 case (translation to Modelica) is a blackbox method (e.g., TEASER) which prevents a simulation mapper class from existing at that level.</p>"},{"location":"developer_resources/#running-simulations","title":"Running Simulations","text":"<p>The GeoJSON to Modelica Translator contains a <code>ModelicaRunner.run_in_docker(...)</code> method. The test suite uses this to run most of our models with OpenModelica.</p>"},{"location":"developer_resources/#release-instructions","title":"Release Instructions","text":"<ol> <li>Create a branch named <code>Release 0.x.</code></li> <li>Update version in <code>pyproject.toml</code></li> <li>Update CHANGELOG using GitHub's \"Autogenerate Change Log\" feature, using <code>develop</code> as the target</li> <li>After tests pass, merge branch into develop</li> <li>From local command line, merge develop into main with: <code>git checkout main; git pull; git merge --ff-only origin develop; git push</code></li> <li>In GitHub, tag the release against main. Copy and paste the changelog entry into the notes. Verify the release is posted to PyPI.</li> </ol>"},{"location":"developer_resources/#build-and-release-the-documentation","title":"Build and release the documentation","text":"<p>During development we can serve docs locally and view updates as they are made.</p> <ol> <li>Start a documentation update branch: <code>git switch -c &lt;branch_name&gt;</code></li> <li><code>poetry run mkdocs serve</code></li> <li> <p>Point browser to http://127.0.0.1:8000/</p> </li> <li> <p>To deploy, push a commit in the <code>docs</code> folder to the <code>main</code> branch</p> </li> <li>Wait a few minutes, then verify the new documentation on the docs website</li> </ol>"},{"location":"getting_started/","title":"Getting Started","text":"<p>There are three major steps to running the GeoJSON to Modelica Translator (GMT):</p> <ol> <li>Generating the GeoJSON and System Parameter JSON files,</li> <li>Creating of the Modelica package containing the district system, and</li> <li>Running the Modelica package.</li> </ol> <p>Depending on the use case, the need to run all the steps above may not be needed. For example: it may be desirable to only generate the Modelica package and then open and run the model in a Modelica user interface such as Dymola. Or, there may be a case to simply generate the System Parameter file from results of an URBANopt SDK simulation. These files can then be customized by hand to build a district system to meet your needs.</p> <p>Therefore, this Getting Started guide is broken up into three major setup steps. Each one requires all previous steps to be completed first.</p> <ol> <li>Installing the GMT from PyPI</li> <li>Installing and configuring the Modelica Buildings Library (MBL)</li> <li>Installing and configuring Docker in order to run simulations using OpenModelica.</li> </ol>"},{"location":"getting_started/#gmt-installation","title":"GMT Installation","text":"<p>You must have PIP and Python 3.10 or later installed (run <code>python --version</code> to see what version you're using). After installing Python and PIP run the following in a terminal:</p> <pre><code>pip install geojson-modelica-translator\n</code></pre> <p>After installation of the GMT, a new command line interface (called the URBANopt District Energy Systems [UO DES] CLI) can be used to run various commands. Without needing to install the MBL the user can use the CLI to build the system parameters file from the results of the URBANopt SDK. For more information run the following:</p> <pre><code>uo_des -h\nuo_des build-sys-param -h\n</code></pre> <p>The command below is only an example; however, it will run if the repository is checked out and run in the following path: <code>./tests/management/data/sdk_project_scraps</code></p> <pre><code>uo_des build-sys-param sys_param.json baseline_scenario.csv example_project.json\n</code></pre>"},{"location":"getting_started/#mbl-installation","title":"MBL Installation","text":"<p>The Modelica Buildings Library contains many models that are needed to assemble the district systems. Follow the instructions below to install the MBL needed for the GMT:</p> <ul> <li>Download and extract the appropriate version of the MBL from https://simulationresearch.lbl.gov/modelica/downloads/archive/modelica-buildings.html</li> <li>The appropriate version can be found in the right-hand column of the installer matrix (may need to scroll to show that column).</li> <li>Add the Modelica Buildings Library path to your MODELICAPATH environment variable (e.g., <code>export MODELICAPATH=${MODELICAPATH}:$HOME/path/to/modelica-buildings</code>).</li> <li>For help setting env vars on Windows, this documentation may help: https://www.howtogeek.com/787217/how-to-edit-environment-variables-on-windows-10-or-11/</li> <li>Restart your terminal to ensure that the environment variable for the MBL library is exported correctly.</li> </ul> <p>Once the MBL is installed, then the CLI can be used to create the model with the following command:</p> <pre><code>uo_des create-model -h\n</code></pre> <p>The command below is only an example; however, it will run if the repository is checked out and run in the following path: <code>./tests/management/data/sdk_project_scraps</code></p> <pre><code>uo_des create-model sys_param.json example_project.json model_from_sdk\n</code></pre> <p>The resulting Modelica package will be created and can be opened in a Modelica editor. Open the <code>package.mo</code> file in the root directory of the generated package. You will also need to load the MBL into your Modelica editor.</p> <p>Most models can be simulated for free using OpenModelica, which is included via Docker.</p> <p>Dymola is a commercial alternative to OpenModelica. Licenses for use can be purchased from them.</p>"},{"location":"getting_started/#docker-installation","title":"Docker Installation","text":"<p>Version 0.5.0+ of the GMT enables running the models using OpenModelica which requires the installation of Docker. To configure Docker, do the following:</p> <ul> <li>Install Docker for your system.</li> <li>Configure Docker Desktop to have at least 4 GB Ram and 2 cores. This is configured under the Docker Preferences.</li> <li>Windows users can refer to these instructions for more detail on adjusting Docker resources and may also be helped by this page, which documents how to change resources in WSL.</li> <li>Larger models (more buildings) may require more resources in Docker.</li> <li>We recommend testing the Docker installation by simply running <code>docker run hello-world</code> in a terminal to confirm it is working as intended.</li> </ul> <p>After Docker is installed and configured, you can use the CLI to run the model using the following command:</p> <pre><code>uo_des run-model -h\n</code></pre> <p>The command below is only an example; however, it will run if the repository is checked out and run in the following path: <code>./tests/management/data/sdk_project_scraps</code></p> <pre><code>uo_des run-model model_from_sdk\n</code></pre>"},{"location":"input_file_documentation/","title":"Input File Documentation","text":"<p>There are two key input files that need to be defined to use the GeoJSON to Modelica Translator: a GeoJSON file and a System Parameters file.</p> <p>As an aside, 5GDHC systems also require a <code>loop_order</code> JSON file, which is automatically generated by the ThermalNetwork package and used without any human input.</p>"},{"location":"input_file_documentation/#geojson-documentation","title":"GeoJSON Documentation","text":"<p>Presently only the building_properties.json of URBANopt's GeoJSON schemas is leveraged in the GMT.</p>"},{"location":"input_file_documentation/#building-properties","title":"Building Properties","text":"<p>The building properties for the geojson file can be found in the <code>Schema</code> section of this documentation</p>"},{"location":"input_file_documentation/#system-parameters-schema","title":"System Parameters Schema","text":"<p>The system parameter properties can be found in the <code>Schema</code> section of this documentation</p>"},{"location":"license/","title":"License","text":"<p>URBANopt\u2122, Copyright (c) 2019, 2024 Alliance for Sustainable Energy, LLC, and other contributors. All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <p>(1) Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p> <p>(2) Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p> <p>(3) Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p> <p>(4) Other than as required in clauses (1) and (2), distributions in any form of modifications or other derivative works (i) may not use the \"URBANopt\" trademark, or any other confusingly similar designation without specific prior written permission from Alliance for Sustainable Energy, LLC., and (ii) must refer to the underlying software originally provided by Alliance as \u201cURBANopt\u201d.</p> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p> <p>This library also uses some examples and components from the Modelica Buildings Library.</p> <p>Modelica Buildings Library. Copyright (c) 1998-2019 Modelica Association, International Building Performance Simulation Association (IBPSA), The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Dept. of Energy) and contributors. All rights reserved.</p> <p>NOTICE.  This Software was developed under funding from the U.S. Department of Energy and the U.S. Government consequently retains certain rights. As such, the U.S. Government has been granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the Software to reproduce, distribute copies to the public, prepare derivative works, and perform publicly and display publicly, and to permit other to do so.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p> <p>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p> <p>Neither the names of the Modelica Association, International Building Performance Simulation Association (IBPSA), the University of California, Lawrence Berkeley National Laboratory, U.S. Dept. of Energy, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p> <p>You are under no obligation whatsoever to provide any bug fixes, patches, or upgrades to the features, functionality or performance of the source code (\"Enhancements\") to anyone; however, if you choose to make your Enhancements available either publicly, or directly to Lawrence Berkeley National Laboratory, without imposing a separate written license agreement for such Enhancements, then you hereby grant the following license: a non-exclusive, royalty-free perpetual license to install, use, modify, prepare derivative works, incorporate into other computer software, distribute, and sublicense such enhancements or derivative works thereof, in binary and source code form.</p> <p>Note: The license is a revised 3 clause BSD license with an ADDED paragraph at the end that makes it easy to accept improvements.</p>"},{"location":"schema/system_parameter_properties/","title":"JSON Schema","text":""},{"location":"schema/system_parameter_properties/#definitions","title":"Definitions","text":"<ul> <li><code>system_design_parameter_def</code> (object): Definition of System Design Parameters. (Version 0.1). Fields prefaced with [unused] in the description are placeholders (or informational) and are not actually connected in the GMT. Cannot contain additional properties.</li> <li><code>buildings</code> (array): Parameters for individual buildings.<ul> <li>Items: Refer to #/definitions/building_def.</li> </ul> </li> <li><code>connectors</code>: Refer to #/definitions/connector_def.</li> <li><code>district_system</code> (object): Parameters associated with district systems.<ul> <li>One of</li> <li>: Refer to #/definitions/fourth_generation_def.</li> <li>: Refer to #/definitions/fifth_generation_def.</li> </ul> </li> <li><code>weather</code> (string, required): Path, relative or absolute, to a weather file for the district in Modelica format (MOS).</li> <li><code>topology</code> (object): [unused] Parameters associated with district topologies. Cannot contain additional properties.<ul> <li><code>topology_parameters</code>: Description of topology style. Refer to #/definitions/topology_def.</li> <li><code>topology_optimization</code> (boolean): Perform topology optimization?</li> <li><code>cost_function</code>: Cost function to use in topology optimization. Refer to #/definitions/cost_function_definition.</li> <li><code>optimization_approach</code>: Approach to use for topology optimization. Refer to #/definitions/optimization_definition.</li> <li><code>time_period</code> (integer): Time horizon for topology optimization.This parameter is used only if LCC is used as the cost function.</li> <li><code>discount_rate</code> (integer): Discount rate for topology optimization. This parameter is used only if LCC is used as the cost function.</li> <li><code>convergence_criteria</code> (integer): Convergence criteria used to indicate to the optimization algorithm when to stop. This could represent a number of iterations.</li> </ul> </li> <li><code>electrical_grid</code>: Refer to #/definitions/electrical_grid_parameters.</li> <li><code>photovoltaic_panels</code> (array): Photovoltaic systems (rooftop or ground mount) associated with the district - from scenario optimization.<ul> <li>Items: Refer to #/definitions/pv_parameters.</li> </ul> </li> <li><code>wind_turbines</code> (array): Wind turbines associated with the district - from scenario optimization.<ul> <li>Items: Refer to #/definitions/wind_turbine_parameters.</li> </ul> </li> <li><code>combined_heat_and_power_systems</code> (array): Combined heat and power (CHP) systems associated with the district - from scenario optimization.<ul> <li>Items: Refer to #/definitions/combined_heat_and_power_parameters.</li> </ul> </li> <li><code>capacitor_banks</code> (array): Capacitor banks associated with the district.<ul> <li>Items: Refer to #/definitions/capacitor_bank_parameters.</li> </ul> </li> <li><code>substations</code> (array): Substations associated with the district.<ul> <li>Items: Refer to #/definitions/substation_parameters.</li> </ul> </li> <li><code>transformers</code> (array): Transformers associated with the district.<ul> <li>Items: Refer to #/definitions/transformer_parameters.</li> </ul> </li> <li><code>power_converters</code> (array): Power converters associated with the district.<ul> <li>Items: Refer to #/definitions/power_converter_parameters.</li> </ul> </li> <li><code>distribution_lines</code> (array): Distribution lines associated with the district.<ul> <li>Items: Refer to #/definitions/distribution_line_parameters.</li> </ul> </li> <li><code>ac_inductive_loads</code> (array): AC inductive loads associated with the district.<ul> <li>Items: Refer to #/definitions/ac_inductive_load_parameters.</li> </ul> </li> <li><code>dc_loads</code> (array): DC loads associated with the district.<ul> <li>Items: Refer to #/definitions/dc_load_parameters.</li> </ul> </li> <li><code>battery_banks</code> (array): Battery banks associated with the district.<ul> <li>Items: Refer to #/definitions/battery_bank_parameters.</li> </ul> </li> <li><code>topology_def</code> (object): [unused] Parameters associated with district topologies. Cannot contain additional properties.</li> <li><code>configuration</code> (string): Must be one of: <code>[\"Radial\", \"Ring\", \"Mesh\", \"Out and Back\"]</code>.</li> <li><code>cost_function_definition</code> (object): [unused] Possible cost functions for the topology optimization problem. Cannot contain additional properties.</li> <li><code>cost_function</code> (string): Must be one of: <code>[\"Energy\", \"Life Cycle Cost\", \"Carbon Emissions\"]</code>.</li> <li><code>optimization_definition</code> (object): [unused] Optimization approach for the topology optimization problem. Cannot contain additional properties.</li> <li><code>optimization_approach</code> (string): Must be one of: <code>[\"Black box\", \"Gradient-based\"]</code>.</li> <li><code>building_def</code> (object): Specific parameters for each building.</li> <li>One of</li> <li><code>geojson_id</code> (string, required): The GeoJSON ID as defined in the GeoJSON file.</li> <li><code>load_model</code> (string, required): Type of load model to use for the building. Must be one of: <code>[\"rc\", \"time_series\", \"time_series_massflow_temperature\", \"spawn\"]</code>.</li> <li><code>load_model_parameters</code> (object, required): Cannot contain additional properties.<ul> <li>Any of</li> <li></li> <li></li> <li></li> <li><code>spawn</code>: Refer to #/definitions/spawn_model_parameters.</li> <li><code>rc</code>: Refer to #/definitions/rc_model_parameters.</li> <li><code>time_series</code>: Refer to #/definitions/time_series_model_parameters.</li> </ul> </li> <li><code>ets_model</code> (string, required): Energy transfer station model. One side is connected to the district water loops and the other side is connected to the building water loops. Must be one of: <code>[\"Indirect Heating and Cooling\", \"Fifth Gen Heat Pump\"]</code>.</li> <li><code>ets_model_parameters</code> (object): Cannot contain additional properties.<ul> <li>One of</li> <li>: Refer to #/definitions/ets_indirect_parameters.</li> <li>: Refer to #/definitions/fifth_gen_ets_parameters.</li> </ul> </li> <li><code>photovoltaic_panels</code> (array): Photovoltaic systems (rooftop or ground mount) associated with the building - from feature optimization.<ul> <li>Items: Refer to #/definitions/pv_parameters.</li> </ul> </li> <li><code>diesel_generators</code> (array): Diesel generators associated with the building.<ul> <li>Items: Refer to #/definitions/diesel_generator_parameters.</li> </ul> </li> <li><code>battery_banks</code> (array): Battery banks associated with the building.<ul> <li>Items: Refer to #/definitions/battery_bank_parameters.</li> </ul> </li> <li><code>electric_load</code>: microgrid-related load fields.<ul> <li><code>nominal_voltage</code> (number): Nominal load voltage (V).</li> <li><code>max_power</code> (number): Maximum load power (kW).</li> <li><code>max_reactive_power</code> (number): Maximum reactive power (kvar).</li> </ul> </li> <li><code>connector_def</code> (object): [unused] Parameters associated with the connectors in a district system. Cannot contain additional properties.</li> <li><code>pipe_diameter</code> (number): [unused] Pipe diameter. (m).</li> <li><code>pipe_insulation_rvalue</code> (number): [unused] Pipe insulation R-Value. (m2-K/W).</li> <li><code>pipe_location</code> (string): [unused] Location of the pipe. Must be one of: <code>[\"Tunnel\", \"Buried\"]</code>.</li> <li><code>pipe_material</code> (string): [unused] Pipe material (to be used for determining surface roughness) . Must be one of: <code>[\"Plastic\", \"Steel\"]</code>.</li> <li><code>district_system_def</code> (object): Parameters associated with the district system. Cannot contain additional properties.</li> <li><code>return_configuration</code> (string): [unused] Type of return configuration for the overall district system. MW - not really needed. Just use pipes with supply/return. Must be one of: <code>[\"Direct Return\", \"Reverse Return\"]</code>.</li> <li><code>connection_configuration</code> (string): [unused] Type of connection of buildings to the loop. Must be one of: <code>[\"Series\", \"Parallel\"]</code>.</li> <li><code>central_cooling_plant_parameters</code>: Refer to #/definitions/central_cooling_plant_parameters.</li> <li><code>central_heating_plant_parameters</code>: Refer to #/definitions/central_heating_plant_parameters.</li> <li><code>combined_heat_and_power_parameters</code>: Refer to #/definitions/combined_heat_and_power_parameters.</li> <li><code>ets_indirect_parameters</code> (object): The parameters associated with the indirect energy transfer station.</li> <li><code>heat_flow_nominal</code> (number, required): Nominal heat flow rate. (W). Default: <code>10000</code>.</li> <li><code>heat_exchanger_efficiency</code> (number, required): Heat exchanger efficiency. (fraction). Default: <code>0.8</code>.</li> <li><code>heat_exchanger_primary_pressure_drop</code> (number, required): Heat exchanger primary side pressure drop. (Pa). Default: <code>500</code>.</li> <li><code>heat_exchanger_secondary_pressure_drop</code> (number, required): Heat exchanger secondary side pressure drop. (Pa). Default: <code>500</code>.</li> <li><code>nominal_mass_flow_building</code> (number, required): Building water nominal flow rate. (kg/s). Default: <code>10</code>.</li> <li><code>nominal_mass_flow_district</code> (number, required): District water nominal flow rate. (kg/s). Default: <code>10</code>.</li> <li><code>valve_pressure_drop</code> (number, required): Valve pressure drop. (Pa). Default: <code>6000</code>.</li> <li><code>cooling_supply_water_temperature_building</code> (number, required): Chilled water supply temperature building side. (C). Default: <code>7</code>.</li> <li><code>heating_supply_water_temperature_building</code> (number, required): Heating water supply temperature building side. (C). Default: <code>50</code>.</li> <li><code>delta_temp_hw_district</code> (number, required): Heating water temperature difference on on the district side. (deltaC). Default: <code>20</code>.</li> <li><code>delta_temp_hw_building</code> (number, required): Design temperature differential on the building side. (deltaC). Default: <code>15</code>.</li> <li><code>delta_temp_chw_building</code> (number, required): Chilled water temperature difference on the building side. (deltaC). Default: <code>5</code>.</li> <li><code>delta_temp_chw_district</code> (number, required): Design temperature differential on the district side. (deltaC). Default: <code>8</code>.</li> <li><code>cooling_controller_y_max</code> (number, required): Controller upper limit. Default: <code>1</code>.</li> <li><code>cooling_controller_y_min</code> (number, required): Controller lower limit. Default: <code>0</code>.</li> <li><code>heating_controller_y_max</code> (number, required): Controller upper limit. Default: <code>1</code>.</li> <li><code>heating_controller_y_min</code> (number, required): Controller lower limit. Default: <code>0</code>.</li> <li><code>spawn_model_parameters</code> (object): Parameters associated with spawn models. Cannot contain additional properties.</li> <li><code>temp_setpoint_cooling</code> (number, required): Cooling setpoint air temperature. (C). Default: <code>24</code>.</li> <li><code>temp_setpoint_heating</code> (number, required): Heating setpoint air temperature. (C). Default: <code>20</code>.</li> <li><code>temp_hw_supply</code> (number, required): Heating water supply temperature. (C). Default: <code>40</code>.</li> <li><code>temp_hw_return</code> (number, required): Heating water return temperature. (C). Default: <code>35</code>.</li> <li><code>temp_chw_supply</code> (number, required): Chilled water supply temperature. (C). Default: <code>7</code>.</li> <li><code>temp_chw_return</code> (number, required): Chilled water return temperature. (C). Default: <code>12</code>.</li> <li><code>has_liquid_heating</code> (boolean): Whether the building has liquid heating. Default: <code>true</code>.</li> <li><code>has_liquid_cooling</code> (boolean): Whether the building has liquid cooling. Default: <code>true</code>.</li> <li><code>has_electric_heating</code> (boolean): Whether the building has electric heating. Default: <code>false</code>.</li> <li><code>has_electric_cooling</code> (boolean): Whether the building has electric cooling. Default: <code>false</code>.</li> <li><code>idf_filename</code> (string, required): Absolute path or relative path from location where file instance is saved.</li> <li><code>thermal_zone_names</code> (array, required): List of thermal zones in the Spawn / EnergyPlus model.<ul> <li>Items (string)</li> </ul> </li> <li><code>zone_nom_htg_loads</code> (array, required): Array of zone nominal heating loads (values should be &gt;0) .<ul> <li>Items (number)</li> </ul> </li> <li><code>zone_nom_clg_loads</code> (array, required): Array of zone nominal cooling loads (values should be &lt;0).<ul> <li>Items (number)</li> </ul> </li> <li><code>rc_model_parameters</code> (object): Parameters associated with RC models. Cannot contain additional properties.</li> <li><code>temp_setpoint_cooling</code> (number, required): Cooling setpoint air temperature. (C). Default: <code>24</code>.</li> <li><code>temp_setpoint_heating</code> (number, required): Heating setpoint air temperature. (C). Default: <code>20</code>.</li> <li><code>temp_hw_supply</code> (number, required): Heating water supply temperature. (C). Default: <code>40</code>.</li> <li><code>temp_hw_return</code> (number): Heating water return temperature. (C). Default: <code>35</code>.</li> <li><code>temp_chw_supply</code> (number): Chilled water supply temperature. (C). Default: <code>7</code>.</li> <li><code>temp_chw_return</code> (number): Chilled water return temperature. (C). Default: <code>12</code>.</li> <li><code>has_liquid_heating</code> (boolean): Whether the building has liquid heating. Default: <code>true</code>.</li> <li><code>has_liquid_cooling</code> (boolean): Whether the building has liquid cooling. Default: <code>true</code>.</li> <li><code>has_electric_heating</code> (boolean): Whether the building has electric heating. Default: <code>false</code>.</li> <li><code>has_electric_cooling</code> (boolean): Whether the building has electric cooling. Default: <code>false</code>.</li> <li><code>order</code> (integer): Must be one of: <code>[1, 2, 3, 4]</code>. Default: <code>2</code>.</li> <li><code>fraction_latent_person</code> (number, required): Fraction latent of sensible persons load (e.g., 0.8 = home, 1.25 = office). Default: <code>1.25</code>.</li> <li><code>time_series_model_parameters</code> (object): Parameters associated with time series models. Cannot contain additional properties.</li> <li><code>temp_setpoint_cooling</code> (number, required): Cooling setpoint air temperature. (C). Default: <code>24</code>.</li> <li><code>temp_setpoint_heating</code> (number, required): Heating setpoint air temperature. (C). Default: <code>20</code>.</li> <li><code>temp_hw_supply</code> (number, required): Heating water supply temperature. (C). Default: <code>40</code>.</li> <li><code>temp_hw_return</code> (number): Heating water return temperature. (C). Default: <code>35</code>.</li> <li><code>temp_chw_supply</code> (number): Chilled water supply temperature. (C). Default: <code>7</code>.</li> <li><code>temp_chw_return</code> (number): Chilled water return temperature. (C). Default: <code>12</code>.</li> <li><code>has_liquid_heating</code> (boolean): Whether the building has liquid heating. Default: <code>true</code>.</li> <li><code>has_liquid_cooling</code> (boolean): Whether the building has liquid cooling. Default: <code>true</code>.</li> <li><code>has_electric_heating</code> (boolean): Whether the building has electric heating. Default: <code>false</code>.</li> <li><code>has_electric_cooling</code> (boolean): Whether the building has electric cooling. Default: <code>false</code>.</li> <li><code>max_electrical_load</code> (number): Maximum electrical load from OpenStudio building simulation. (W). Default: <code>0</code>.</li> <li><code>filepath</code> (string, required)</li> <li><code>delta_temp_air_cooling</code> (number, required): Nominal cooling air temperature difference across the terminal unit heat exchanger. (deltaC). Default: <code>10</code>.</li> <li><code>delta_temp_air_heating</code> (number, required): Nominal heating air temperature difference across the terminal unit heat exchanger. (deltaC). Default: <code>18</code>.</li> <li><code>central_cooling_plant_parameters</code> (object): Central cooling plant with maximum number of two chillers. Parameters associated with the model.</li> <li><code>cooling_tower_fan_power_nominal</code> (number): Cooling tower fan power (W). Default: <code>5000</code>.</li> <li><code>heat_flow_nominal</code> (number): Nominal district cooling load. (W). Default: <code>8000</code>.</li> <li><code>mass_chw_flow_nominal</code> (number): Nominal chilled water mass flow rate. (kg/s). Default: <code>10</code>.</li> <li><code>chiller_water_flow_minimum</code> (number):  Chiller minimum  water mass flow rate. (kg/s). Default: <code>10</code>.</li> <li><code>mass_cw_flow_nominal</code> (number): Nominal condenser water mass flow rate. (kg/s). Default: <code>10</code>.</li> <li><code>chw_pump_head</code> (number): Chilled water pump head (Pa). Default: <code>300000</code>.</li> <li><code>cw_pump_head</code> (number): Cooling water pump head (Pa). Default: <code>200000</code>.</li> <li><code>pressure_drop_chw_nominal</code> (number): Nominal chilled water (evaporator) side pressure drop. (Pa). Default: <code>55000</code>.</li> <li><code>pressure_drop_cw_nominal</code> (number): Nominal cooling water (condenser) side pressure drop. (Pa). Default: <code>80000</code>.</li> <li><code>pressure_drop_setpoint</code> (number): The chilled water circuit pressure drop setpoint. (Pa). Default: <code>50000</code>.</li> <li><code>temp_setpoint_chw</code> (number, required): District circuit chilled water temperature setpoint. (C). Default: <code>5</code>.</li> <li><code>pressure_drop_chw_valve_nominal</code> (number): Chiller isolation valve pressure drop. (Pa). Default: <code>6000</code>.</li> <li><code>pressure_drop_cw_pum_nominal</code> (number): Cooling tower isolation valve pressure drop. (Pa). Default: <code>6000</code>.</li> <li><code>temp_air_wb_nominal</code> (number): Design air wet-bulb temperature. (C). Default: <code>25</code>.</li> <li><code>temp_cw_in_nominal</code> (number): Nominal cooling water inlet temperature. (C). Default: <code>35</code>.</li> <li><code>cooling_tower_water_temperature_difference_nominal</code> (number): Nominal water temperature difference of the tower. (C). Default: <code>7</code>.</li> <li><code>delta_temp_approach</code> (number): Approach temperature difference. (deltaC). Default: <code>3</code>.</li> <li><code>ratio_water_air_nominal</code> (number): To be defined. Default: <code>0.625</code>.</li> <li><code>central_heating_plant_parameters</code> (object): Central heating plant with maximum number of two boilers. Parameters associated with the model.</li> <li><code>heat_flow_nominal</code> (number): Nominal district heating load. (W). Default: <code>8000</code>.</li> <li><code>mass_hhw_flow_nominal</code> (number): Nominal heating water mass flow rate. (kg/s). Default: <code>1</code>.</li> <li><code>boiler_water_flow_minimum</code> (number): [unused] Boiler minimum  water mass flow rate. (kg/s). Default: <code>0.1</code>.</li> <li><code>pressure_drop_hhw_nominal</code> (number): [unused] Nominal heating water (boiler side) pressure drop. (Pa). Default: <code>55000</code>.</li> <li><code>temp_setpoint_hhw</code> (number, required): District circuit heating water temperature setpoint. (C). Default: <code>55</code>.</li> <li><code>pressure_drop_hhw_valve_nominal</code> (number): Boiler isolation valve pressure drop. (Pa). Default: <code>6000</code>.</li> <li><code>chp_installed</code> (boolean): True if heating plant is a Combined Heat and Power plant.</li> <li><code>chp_thermal_following</code> (boolean): True if CHP is thermal_following (prioritized thermal heat over electricity).</li> <li><code>combined_heat_and_power_parameters</code> (object): Combined heat and power (CHP) parameters used by the microgrid model.</li> <li><code>fuel_type</code> (string): Type of fuel used. Must be one of: <code>[\"Gas\", \"Oil\"]</code>.</li> <li><code>number_of_machines</code> (integer): Number of machines.</li> <li><code>single_electricity_generation_capacity</code> (number): Single machine electricity generation capacity (kW).</li> <li><code>performance_data_path</code> (string): Relative path from location where file instance is saved to the .mo file which records the performance curve of a CHP.</li> <li><code>ghe_parameters</code> (object): Parameters associated with Ground Heat Exchangers.</li> <li><code>version</code> (string): Version of GHE Designer.</li> <li><code>ghe_dir</code> (string): Results directory for GHE Designer. Absolute path, or relative to the sys-param file.</li> <li><code>ghe_specific_params</code> (array, required): Specific properties for each Ground Heat Exchanger.<ul> <li>Items: Refer to #/definitions/ghe_specific_params_def.</li> </ul> </li> <li><code>pipe</code>: Refer to #/definitions/pipe_def.</li> <li><code>fluid</code>: Refer to #/definitions/fluid_def.</li> <li><code>grout</code>: Refer to #/definitions/grout_def.</li> <li><code>simulation</code>: Refer to #/definitions/simulation_def.</li> <li><code>geometric_constraints</code>: Refer to #/definitions/geometric_constraints_def.</li> <li><code>design</code>: Refer to #/definitions/design_def.</li> <li><code>horizontal_piping_parameters</code> (object)</li> <li><code>hydraulic_diameter</code> (number): Hydraulic diameter of the distribution pipe.</li> <li><code>insulation_thickness</code> (number): Thickness of pipe insulation, used to compute R. If no insulation, use a virtual insulation layer of soil. Must be greater than zero.</li> <li><code>insulation_conductivity</code> (number): Heat conductivity of pipe insulation, used to compute R. If no insulation, use a virtual insulation layer of soil. Must be greater than zero.</li> <li><code>diameter_ratio</code> (number): The ratio of pipe outer diameter to pipe wall thickness.</li> <li><code>roughness</code> (number): Average height of pipe material surface asperities.</li> <li><code>rho_cp</code> (number): Volumetric heat capacity of the pipe wall material.</li> <li><code>number_of_segments</code> (integer): Number of axial pipe segments, used to discretize pipe models.</li> <li><code>buried_depth</code> (number): Pipes buried depth.</li> <li><code>diesel_generator_parameters</code> (object): Diesel generator parameters used by the microgrid model.</li> <li><code>nominal_power_generation</code> (number): Nominal power generation (W).</li> <li><code>source_phase_shift</code> (number): Phase shift angle of source (degrees).</li> <li><code>electrical_grid_parameters</code> (object): Electrical grid parameters used by the microgrid model.</li> <li><code>frequency</code> (number): Frequency (Hz). Default: <code>60</code>.</li> <li><code>source_rms_voltage</code> (number): Root mean square (RMS) voltage of source (V).</li> <li><code>source_phase_shift</code> (number): Phase shift angle of source (degrees).</li> <li><code>pv_parameters</code> (object): Photovoltaic panel parameters used by the microgrid model.</li> <li><code>net_surface_area</code> (number, required): Net PV Surface Area (m2).</li> <li><code>surface_tilt</code> (number, required): PV Surface Tilt (degrees).</li> <li><code>surface_azimuth</code> (number, required): PV Surface Azimuth (degrees).</li> <li><code>latitude</code> (number, required): Latitude.</li> <li><code>nominal_voltage</code> (number, required): Nominal System Voltage (V). Default: <code>480</code>.</li> <li><code>wind_turbine_parameters</code> (object): Wind turbine parameters used by the microgrid model.</li> <li><code>scaling_factor</code> (number): Scaling Factor.</li> <li><code>height_over_ground</code> (number): Height over ground (m).</li> <li><code>power_curve</code> (array): Power curve given as an array of pairs of value: the first in (m/s) and the second in (W).</li> <li><code>rated_power</code> (number): Wind turbine size (kW).</li> <li><code>annual_energy_produced</code> (number): Average yearly energy produced (kWh).</li> <li><code>nominal_voltage</code> (number): Nominal System Voltage (V). Default: <code>480</code>.</li> <li><code>capacitor_bank_parameters</code> (object): Capacitor bank parameters used by the microgrid model.</li> <li><code>nominal_capacity</code> (number, required): Nominal Capacity (var).</li> <li><code>substation_parameters</code> (object): Substation parameters used by the microgrid model.</li> <li><code>RMS_voltage_high_side</code> (number): RMS voltage on high side (V).</li> <li><code>RMS_voltage_low_side</code> (number): RMS voltage on low side (V).</li> <li><code>transformer_parameters</code> (object): Transformer parameters used by the microgrid model.</li> <li><code>id</code> (string): The transformer ID as defined in the scenario report.</li> <li><code>nominal_capacity</code> (number): Nominal Capacity (kVA).</li> <li><code>reactance_resistance_ratio</code> (number): Ratio between reactance and resistance.</li> <li><code>power_converter_parameters</code> (object): Power converter parameters used by the microgrid model.</li> <li><code>converter type</code> (string): Power converter type.</li> <li><code>RMS_voltage_ratio</code> (number): Ratio of RMS voltage on low side/high side.</li> <li><code>converter_efficiency</code> (number): Converter Efficiency (%).</li> <li><code>nominal_capacity</code> (number): Nominal Capacity (kVA).</li> <li><code>distribution_line_parameters</code> (object): Distribution lines parameters used by the microgrid model.</li> <li><code>line_length</code> (number): Length of distribution lines (m).</li> <li><code>maximum_ampacity</code> (number): Maximum power of the lines. this is defined in Amps.</li> <li><code>nominal_voltage</code> (number): Nominal voltage of the lines (V). Default: <code>480</code>.</li> <li><code>commercial_line_type</code> (array): Commercial line type given by the type of each wire making up the line.</li> <li><code>ac_inductive_load_parameters</code> (object): AC inductive load parameters used by the microgrid model.</li> <li><code>nominal_voltage</code> (number): Nominal voltage (V).</li> <li><code>nominal_power_consumption</code> (string): Nominal Power Consumption type. Must be one of: <code>[\"constant\", \"variable load\"]</code>.</li> <li><code>dc_load_parameters</code> (object): DC load parameters used by the microgrid model.</li> <li><code>nominal_voltage</code> (number): Nominal voltage (V).</li> <li><code>nominal_power_consumption</code> (string): Nominal Power Consumption type. Must be one of: <code>[\"constant\", \"variable load\"]</code>.</li> <li><code>battery_bank_parameters</code> (object): Battery bank associated with the district.</li> <li><code>capacity</code> (number): Maximum available charge (MWh).</li> <li><code>nominal_voltage</code> (number): Nominal voltage (V).</li> <li><code>fourth_generation_def</code></li> <li><code>fourth_generation</code>: Refer to #/definitions/fourth_generation.</li> <li><code>fifth_generation_def</code></li> <li><code>fifth_generation</code>: Refer to #/definitions/fifth_generation.</li> <li><code>fifth_gen_ets_parameters</code></li> <li><code>supply_water_temperature_building</code> (number, required): Water supply temperature building side. (C). Default: <code>15</code>.</li> <li><code>chilled_water_supply_temp</code> (number, required): Chilled water supply temperature. (C). Default: <code>5</code>.</li> <li><code>hot_water_supply_temp</code> (number, required): Heating water supply temperature. (C). Default: <code>50</code>.</li> <li><code>cop_heat_pump_heating</code> (number, required): COP of heat pump for heating water production. Default: <code>2.5</code>.</li> <li><code>cop_heat_pump_cooling</code> (number, required): COP of heat pump for cooling water production. Default: <code>3.5</code>.</li> <li><code>ets_pump_flow_rate</code> (number, required): Design volume flow rate of the ETS pump. (m3/s). Default: <code>0.0005</code>.</li> <li><code>ets_pump_head</code> (number, required): Design head pressure of the ETS pump. (Pa). Default: <code>10000</code>.</li> <li><code>fan_design_flow_rate</code> (number, required): Design volume flow rate of the load-side fan. (m3/s). Default: <code>0.25</code>.</li> <li><code>fan_design_head</code> (number, required): Design head pressure of the load-side fan. (Pa). Default: <code>150</code>.</li> <li><code>soil_def</code> (object): Soil properties for Ground Heat Exchanger sizing.</li> <li><code>conductivity</code> (number, required): The conductivity of the soil, in units of W/m-K. Default: <code>2</code>.</li> <li><code>rho_cp</code> (number, required): The volumetric heat capacity of the soil, in units of J/m^3-K. Default: <code>2600000</code>.</li> <li><code>undisturbed_temp</code> (number, required): The undisturbed average soil temperature, in units of degrees Celsius. Default: <code>15</code>.</li> <li><code>ghe_specific_params_def</code> (object): The properties associated with each Ground Heat Exchanger instance.</li> <li><code>ghe_id</code> (string, required): Feature ID of GHE from GeoJSON Feature File.</li> <li><code>borehole</code> (object, required): Borehole properties for Ground Heat Exchanger sizing. Can contain additional properties.<ul> <li><code>buried_depth</code> (number, required): The depth below the ground surface to the top of the borehole, in meters. Default: <code>1.2</code>.</li> <li><code>diameter</code> (number, required): The diameter of the borehole, in meters. Default: <code>0.15</code>.</li> <li><code>number_of_boreholes</code> (number): Number of boreholes on the site, determined from Thermal Network sizing.</li> <li><code>length_of_boreholes</code> (number): The length of the borehole (in meters), determined from Thermal Network sizing.</li> </ul> </li> <li><code>ghe_geometric_params</code> (object, required): The length and width of the Ground Heat Exchanger determined from the GeoJSON Feature File.<ul> <li><code>length_of_ghe</code> (number, required): Horizontal surface length allowed for the ground heat exchanger, in meters.</li> <li><code>width_of_ghe</code> (number, required): Horizontal surface width allowed for the ground heat exchanger, in meters.</li> </ul> </li> <li><code>pipe_def</code> (object): Pipe properties for Ground Heat Exchanger sizing.</li> <li><code>inner_diameter</code> (number, required): The diameter of the inner pipe surface, in meters. Default: <code>0.0269</code>.</li> <li><code>outer_diameter</code> (number, required): The diameter of the outer pipe surface, in meters. Minimum: <code>0</code>. Default: <code>0.0334</code>.</li> <li><code>shank_spacing</code> (number, required): The spacing between the U-tube legs, as referenced from outer surface of the pipes (i.e., not referenced from each pipes respective centerline), in meters. Minimum: <code>0</code>. Default: <code>0.0277</code>.</li> <li><code>roughness</code> (number, required): The surface roughness of the pipe, in meters. Minimum: <code>0</code>. Default: <code>1e-06</code>.</li> <li><code>conductivity</code> (number, required): The conductivity of the pipe material, in W/m-K. Minimum: <code>0</code>. Default: <code>0.4</code>.</li> <li><code>rho_cp</code> (number, required): The volumetric heat capacity of the pipe material, in J/m^3-K. Minimum: <code>0</code>. Default: <code>1542000</code>.</li> <li><code>arrangement</code> (string, required): Arrangement of the pipes. Must be one of: <code>[\"singleutube\", \"coaxial\", \"doubleutube\"]</code>. Default: <code>\"singleutube\"</code>.</li> <li><code>fluid_def</code> (object): Fluid properties for Ground Heat Exchanger sizing.</li> <li><code>fluid_name</code> (string, required): Circulating fluid parameters for ground heat exchanger sizing. Must be one of: <code>[\"Water\", \"EthylAlcohol\", \"EthyleneGlycol\", \"MethylAlcohol\", \"PropyleneGlycol\"]</code>. Default: <code>\"Water\"</code>.</li> <li><code>concentration_percent</code> (number, required): The concentration of circulation fluid in percent, from 0-60. Minimum: <code>0</code>. Maximum: <code>60</code>. Default: <code>0</code>.</li> <li><code>temperature</code> (number, required): Average design fluid temperature at peak conditions, in C. Default: <code>20</code>.</li> <li><code>grout_def</code> (object): Grout properties used for ground heat exchanger sizing.</li> <li><code>conductivity</code> (number, required): Grout thermal conductivity, in W/m-K. Minimum: <code>0</code>. Default: <code>2</code>.</li> <li><code>rho_cp</code> (number, required): Grout volumetric heat capacity, in J/m^3-K. Minimum: <code>0</code>. Default: <code>4408000</code>.</li> <li><code>simulation_def</code> (object): Simulation parameters use for ground heat exchanger sizing.</li> <li><code>num_months</code> (integer, required): Length of ground heat exchanger sizing period, in months. Minimum: <code>0</code>. Default: <code>240</code>.</li> <li><code>geometric_constraints_def</code> (object): Geometric constraints for GHE and boreholes.</li> <li><code>b_min</code> (number, required): Minimum borehole-to-borehole spacing, in meters. Default: <code>3</code>.</li> <li><code>b_max</code> (number, required): Maximum borehole-to-borehole spacing, in meters. Default: <code>10</code>.</li> <li><code>max_height</code> (number, required): Maximum height, or depth, of each borehole heat exchanger, in meters. Default: <code>200</code>.</li> <li><code>min_height</code> (number, required): Minimum height, or depth, of each borehole heat exchanger, in meters. Default: <code>100</code>.</li> <li><code>method</code> (string, required): GHE sizing method. Must be one of: <code>[\"nearsquare\", \"rectangle\"]</code>. Default: <code>\"rectangle\"</code>.</li> <li><code>design_def</code> (object): Design parameters used for GHE sizing.</li> <li><code>method</code> (string, required): Building load distribution method for Ground Heat Exchanger sizing. Must be one of: <code>[\"AREAPROPORTIONAL\", \"UPSTREAM\"]</code>. Default: <code>\"AREAPROPORTIONAL\"</code>.</li> <li><code>flow_rate</code> (number, required): Nominal design mass flow rate, in l/s. Depending on whether the flow_type attribute is set to 'borehole' or 'system', this will be the nominal flow rate for either each borehole or the entire ground heat exchanger. Minimum: <code>0</code>. Default: <code>0.3</code>.</li> <li><code>flow_type</code> (string, required): Flow type for ground heat exchanger sizing. Must be one of: <code>[\"borehole\", \"system\"]</code>. Default: <code>\"borehole\"</code>.</li> <li><code>max_eft</code> (number, required): Maximum heat pump entering fluid temperature used for ground heat exchanger sizing, in Celsius. Default: <code>35</code>.</li> <li><code>min_eft</code> (number, required): Minimum heat pump entering fluid temperature used for ground heat exchanger sizing, in Celsius. Default: <code>5</code>.</li> <li><code>central_pump_parameters</code> (object): Parameters for central pump.</li> <li><code>pump_design_head</code> (number, required): Measured in Pa.</li> <li><code>pump_flow_rate</code> (number, required): Design volume flow rate of the ambient loop pump. (m3/s). Default: <code>0.01</code>.</li> <li><code>fifth_generation</code> (object): Fifth generation district parameters, for an ambient loop system.</li> <li><code>soil</code>: Refer to #/definitions/soil_def.</li> <li><code>ghe_parameters</code>: Refer to #/definitions/ghe_parameters.</li> <li><code>connected_buildings</code><ul> <li>Items:<ul> <li></li> <li><code>building_id</code>: This is the geojson_id that is defined in the building object.</li> </ul> </li> </ul> </li> <li><code>central_pump_parameters</code>: Refer to #/definitions/central_pump_parameters.</li> <li><code>horizontal_piping_parameters</code>: Refer to #/definitions/horizontal_piping_parameters.</li> <li><code>fourth_generation</code> (object): Fourth generation district parameters, for a central loop system.</li> <li>Any of</li> <li><code>central_cooling_plant_parameters</code>: Refer to #/definitions/central_cooling_plant_parameters.</li> <li><code>central_heating_plant_parameters</code>: Refer to #/definitions/central_heating_plant_parameters.</li> <li><code>combined_heat_and_power_parameters</code>: Refer to #/definitions/combined_heat_and_power_parameters.</li> <li><code>connected_buildings</code><ul> <li>Items:<ul> <li></li> <li><code>building_id</code>: This is the geojson_id that is defined in the building object.</li> </ul> </li> </ul> </li> </ul>"},{"location":"schema/system_parameter_properties/#-","title":"-","text":""},{"location":"schema/system_parameter_properties/#-_1","title":"-","text":""},{"location":"schema/district_system_properties/","title":"URBANopt District System","text":"<p>Schema for an URBANopt District System object</p>"},{"location":"schema/district_system_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string): Unique id used to refer to this feature within this dataset.</li> <li><code>project_id</code> (string): Project which this feature belongs to.</li> <li><code>type</code> (string, required): Type of feature. Must be one of: <code>[\"District System\"]</code>.</li> <li><code>source_name</code> (string): Name of the original data source.</li> <li><code>source_id</code> (string): Id of the feature in original data source.</li> <li><code>name</code> (string): Feature name.</li> <li><code>legal_name</code> (string): Legal name used to identify this feature.</li> <li><code>address</code> (string): Street address.</li> <li><code>district_system_type</code>: Refer to #/definitions/districtSystemType.</li> <li><code>detailed_model_filename</code> (string): Name of a detailed model which can be loaded from disk as a seed model or complete model. Mapper class decides which measures to disable if this is present.</li> <li><code>weather_filename</code> (string): Name of EPW weather file for this district system. Defaults to site's weather_filename.</li> <li><code>tariff_filename</code> (string): Name of the tariff file for this district system. Defaults to site's tariff_filename.</li> <li><code>equipment</code> (array): List of equipment in this plant.</li> <li>Items (string): Refer to #/definitions/equipmentType.</li> <li><code>user_data</code>: Arbitrary user data.</li> </ul>"},{"location":"schema/district_system_properties/#definitions","title":"Definitions","text":"<ul> <li><code>districtSystemType</code> (string): Type of district system. Must be one of: <code>[\"Central Chilled Water\", \"Central Hot Water\", \"Central Hot and Chilled Water\", \"Central Ambient Water\", \"Central Hot and Cold Water\", \"Community Photovoltaic\", \"Transformer\", \"Transformer with Storage\", \"Capacitor\", \"Electrical Substation\"]</code>.</li> <li><code>equipmentType</code> (string): Type of equipment, listed in order of load served. Must be one of: <code>[\"Air-Cooled Chiller--Cold Water\", \"Air-Cooled Chiller--Ambient Water\", \"Water-Cooled Chiller--Cold Water\", \"Water-Cooled Chiller---Ambient Water\", \"Capacitor--150KVAR\", \"Capacitor--450KVAR\", \"Cooling Tower--Heat Rejection from Chiller, Cold Water\", \"Cooling Tower--Heat Rejection from Chiller, Ambient Water\", \"Cooling Tower--Direct--Chilled Water\", \"Cooling Tower--Direct--Ambient Water\", \"Boiler--Hot Water\", \"Boiler--Ambient Water\", \"Boiler--Combined Heat and Power--Hot Water\", \"Boiler--Combined Heat and Power--Ambient Water\", \"Water to Water Heat Pump--Ambient Water\", \"Water to Water Heat Pump--Cold Water\", \"Water to Water Heat Pump--Hot Water\", \"Air to Water Heat Pump--Ambient Water\", \"Air to Water Heat Pump--Cold Water\", \"Air to Water Heat Pump--Hot Water\", \"Ground Source Heat Pump--Ambient Water\", \"Ground Source Heat Pump--Cold Water\", \"Ground Source Heat Pump--Hot Water\", \"Solar Thermal Array--Ambient Water\", \"Solar Thermal Array--Hot Water\", \"Storage--Hot Water\", \"Storage--Cold Water\", \"Storage--Ambient Water\", \"Transformer--25KVA CT\", \"Transformer--50KVA CT\", \"Transformer--75KVA CT\", \"Transformer--25KVA PM\", \"Transformer--50KVA PM\", \"Transformer--75KVA PM\", \"Transformer--100KVA PM\", \"Transformer--150KVA PM\", \"Transformer--300KVA PM\", \"Waste Heat Source--Hot Water\", \"Waste Heat Source--Ambient Water\"]</code>.</li> </ul>"},{"location":"schema/electrical_connector_properties/","title":"URBANopt Electrical Connector","text":"<p>Schema for an URBANopt Electrical Connector object</p>"},{"location":"schema/electrical_connector_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string, required): Unique id used to refer to this feature within this dataset.</li> <li><code>project_id</code> (string): Project which this feature belongs to.</li> <li><code>type</code> (string, required): Type of feature. Must be one of: <code>[\"ElectricalConnector\"]</code>.</li> <li><code>source_name</code> (string): Name of the original data source.</li> <li><code>source_id</code> (string): Id of the feature in original data source.</li> <li><code>name</code> (string): Feature name.</li> <li><code>connector_type</code>: Refer to #/definitions/ElectricalLineType.</li> <li><code>lengths</code> (array): Length (ft) of each segment, generated on export.</li> <li>Items (number)</li> <li><code>total_length</code> (number): Total length (ft) of the line, generated on export.</li> <li><code>startJunctionId</code> (string, required): Id of the junction that this line starts at.</li> <li><code>line_properties</code> (object): A sub-element containing all the attributes that can be assigned to a line, including wires.</li> <li><code>is_switch</code> (boolean): Flag indicating if the line is a switch or not.</li> <li><code>is_fuse</code> (boolean): Flag indicating if the line is a fuse or not.</li> <li><code>is_open</code> (boolean): Flag indicating if the switch/fuse is a open or not.</li> <li><code>wires</code> (array): Array of wires that are on the line.</li> <li>Items (string): Refer to #/definitions/WireType.</li> <li><code>endJunctionId</code> (string, required): Id of the junction that this line ends at.</li> <li><code>user_data</code>: Arbitrary user data.</li> </ul>"},{"location":"schema/electrical_connector_properties/#definitions","title":"Definitions","text":"<ul> <li><code>ElectricalLineType</code> (string): Type of electrical line. Must be one of: <code>[\"Wire\"]</code>.</li> <li><code>WireType</code> (string): Type of wire used. Must be one of: <code>[\"OH TPLX #4 S1\", \"OH TPLX #4 S2\", \"OH TPLX #4 A\", \"OH TPLX #4 B\", \"OH TPLX #4 C\", \"OH TPLX #4 N\", \"OH TPLX 1/0 S1\", \"OH TPLX 1/0 S2\", \"OH TPLX 1/0 A\", \"OH TPLX 1/0 B\", \"OH TPLX 1/0 C\", \"OH TPLX 1/0 N\", \"OH TPLX 2/0 S1\", \"OH TPLX 2/0 S2\", \"OH TPLX 2/0 A\", \"OH TPLX 2/0 B\", \"OH TPLX 2/0 C\", \"OH TPLX 2/0 N\", \"OH TPLX 4/0 S1\", \"OH TPLX 4/0 S2\", \"OH TPLX 4/0 A\", \"OH TPLX 4/0 B\", \"OH TPLX 4/0 C\", \"OH TPLX 4/0 N\", \"OH AL #2 A\", \"OH AL #2 B\", \"OH AL #2 C\", \"OH AL #2 N\", \"OH AL #4 A\", \"OH AL #4 B\", \"OH AL #4 C\", \"OH AL #4 N\", \"OH AL 1/0 A\", \"OH AL 1/0 B\", \"OH AL 1/0 C\", \"OH AL 1/0 N\", \"OH AL 2/0 A\", \"OH AL 2/0 B\", \"OH AL 2/0 C\", \"OH AL 2/0 N\", \"OH AL 4/0 A\", \"OH AL 4/0 B\", \"OH AL 4/0 C\", \"OH AL 4/0 N\", \"OH AL 336kcmil A\", \"OH AL 336kcmil B\", \"OH AL 336kcmil C\", \"OH AL 336kcmil N\", \"OH AL 477kcmil A\", \"OH AL 477kcmil B\", \"OH AL 477kcmil C\", \"OH AL 477kcmil N\", \"OH AL 795kcmil A\", \"OH AL 795kcmil B\", \"OH AL 795kcmil C\", \"OH AL 795kcmil N\", \"UG TPLX #4 S1\", \"UG TPLX #4 S2\", \"UG TPLX #4 A\", \"UG TPLX #4 B\", \"UG TPLX #4 C\", \"UG TPLX #4 N\", \"UG TPLX 1/0 S1\", \"UG TPLX 1/0 S2\", \"UG TPLX 1/0 A\", \"UG TPLX 1/0 B\", \"UG TPLX 1/0 C\", \"UG TPLX 1/0 N\", \"UG TPLX 2/0 S1\", \"UG TPLX 2/0 S2\", \"UG TPLX 2/0 A\", \"UG TPLX 2/0 B\", \"UG TPLX 2/0 C\", \"UG TPLX 2/0 N\", \"UG TPLX 4/0 S1\", \"UG TPLX 4/0 S2\", \"UG TPLX 4/0 A\", \"UG TPLX 4/0 B\", \"UG TPLX 4/0 C\", \"UG TPLX 4/0 N\", \"UG AL #2 A\", \"UG AL #2 B\", \"UG AL #2 C\", \"UG AL #2 N\", \"UG AL #4 A\", \"UG AL #4 B\", \"UG AL #4 C\", \"UG AL #4 N\", \"UG AL 1/0 A\", \"UG AL 1/0 B\", \"UG AL 1/0 C\", \"UG AL 1/0 N\", \"UG AL 2/0 A\", \"UG AL 2/0 B\", \"UG AL 2/0 C\", \"UG AL 2/0 N\", \"UG AL 4/0 A\", \"UG AL 4/0 B\", \"UG AL 4/0 C\", \"UG AL 4/0 N\", \"UG AL 350kcmil A\", \"UG AL 350kcmil B\", \"UG AL 350kcmil C\", \"UG AL 350kcmil N\", \"UG AL 500kcmil A\", \"UG AL 500kcmil B\", \"UG AL 500kcmil C\", \"UG AL 500kcmil N\", \"UG AL 750kcmil A\", \"UG AL 750kcmil B\", \"UG AL 750kcmil C\", \"UG AL 750kcmil N\", \"UG AL 1000kcmil A\", \"UG AL 1000kcmil B\", \"UG AL 1000kcmil C\", \"UG AL 1000kcmil N\"]</code>.</li> </ul>"},{"location":"schema/thermal_junction_properties/","title":"URBANopt Thermal Junction","text":"<p>Schema for an URBANopt Thermal Junction object</p>"},{"location":"schema/thermal_junction_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string): Unique id used to refer to this feature within this dataset.</li> <li><code>project_id</code> (string): Project which this feature belongs to.</li> <li><code>type</code> (string, required): Type of feature. Must be one of: <code>[\"ThermalJunction\"]</code>.</li> <li><code>source_name</code> (string): Name of the original data source.</li> <li><code>source_id</code> (string): Id of the feature in original data source.</li> <li><code>name</code> (string): Feature name.</li> <li><code>connector_type</code>: Refer to #/definitions/ThermalJunctionType.</li> <li><code>building_id</code> (string): Id of building if this junction is inside a building.</li> <li><code>district_system_id</code> (string): Id of district system if this junction is inside a district system.</li> <li><code>pump_presence</code> (boolean): Presence of pump: true if present, false if absent.</li> <li><code>connection_type</code>: Characterize the connection as series or parallel. Refer to #/definitions/ThermalJunctionConnectionType.</li> <li><code>user_data</code>: Arbitrary user data.</li> </ul>"},{"location":"schema/thermal_junction_properties/#definitions","title":"Definitions","text":"<ul> <li><code>ThermalJunctionType</code> (string): Type of thermal junction. Must be one of: <code>[\"DES\", \"ETS\", \"Valve\"]</code>.</li> <li><code>ThermalJunctionConnectionType</code> (string): Type of connection for connectors meeting at this junction. Must be one of: <code>[\"Series\", \"Parallel\"]</code>.</li> </ul>"},{"location":"schema/site_properties/","title":"URBANopt Site","text":"<p>Schema for an URBANopt Site object</p>"},{"location":"schema/site_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string): Unique id used to refer to this feature within this dataset, generated by database.</li> <li><code>project_id</code> (string): Project which this feature belongs to.</li> <li><code>name</code> (string): Feature name.</li> <li><code>state</code> (string): State name.</li> <li><code>city</code> (string): City name.</li> <li><code>latitude</code> (number, required): Latitude of site origin in WGS 84 coordinate system (deg).</li> <li><code>longitude</code> (number, required): Longitude of site origin in WGS 84 coordinate system (deg).</li> <li><code>surface_elevation</code> (number): The surface elevation (above NAVD88 datum) of the project (ft).  .</li> <li><code>import_surrounding_buildings_as_shading</code> (boolean): If true, import geometry from surrounding buildings when performing energy calculations.</li> <li><code>timesteps_per_hour</code> (integer): Number of timesteps per hour for energy simulations. Minimum: <code>1</code>. Maximum: <code>60</code>.</li> <li><code>begin_date</code> (string): Date to begin simulation, format YYYY-MM-DD.</li> <li><code>end_date</code> (string): Date to end simulation, format YYYY-MM-DD.</li> <li><code>climate_zone</code> (string): ASHRAE 169 climate zone.</li> <li><code>cec_climate_zone</code> (string): CEC Title24 climate zone.</li> <li><code>default_template</code> (string): Default OpenStudio Standards template.</li> <li><code>weather_filename</code> (string): Name of weather file in EPW format.</li> <li><code>tariff_filename</code> (string): Name of utility tariff file in IDF or URDB format.</li> <li><code>user_data</code>: Arbitrary user data.</li> </ul>"},{"location":"schema/thermal_connector_properties/","title":"URBANopt Thermal Connector","text":"<p>Schema for an URBANopt Thermal Connector object</p>"},{"location":"schema/thermal_connector_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string): Unique id used to refer to this feature within this dataset.</li> <li><code>project_id</code> (string): Project which this feature belongs to.</li> <li><code>type</code> (string, required): Type of feature. Must be one of: <code>[\"ThermalConnector\"]</code>.</li> <li><code>source_name</code> (string): Name of the original data source.</li> <li><code>source_id</code> (string): Id of the feature in original data source.</li> <li><code>name</code> (string): Feature name.</li> <li><code>connector_type</code>: Refer to #/definitions/ThermalConnectorType.</li> <li><code>lengths</code> (array): Length of each segment in ft, generated on export.</li> <li>Items (number)</li> <li><code>total_length</code> (number): Total length of the connector in ft, generated on export.</li> <li><code>start_junction_id</code> (string, required): Id of the junction that this connector starts at.</li> <li><code>end_junction_id</code> (string, required): Id of the junction that this connector ends at.</li> <li><code>fluid_temperature_type</code>: Classification of temperature range of fluid in this connector. Refer to #/definitions/TemperatureType.</li> <li><code>flow_direction</code>: Charcterization of connector, relative to the central plant. Refer to #/definitions/FlowDirection.</li> <li><code>user_data</code>: Arbitrary user data.</li> </ul>"},{"location":"schema/thermal_connector_properties/#definitions","title":"Definitions","text":"<ul> <li><code>ThermalConnectorType</code> (string): Type of thermal connector. Must be one of: <code>[\"OnePipe\", \"TwoPipe\", \"ThreePipe\", \"FourPipe\"]</code>.</li> <li><code>TemperatureType</code> (string): Temperature of fluid flowing in connector. Must be one of: <code>[\"Hot\", \"Cold\", \"Ambient\"]</code>.</li> <li><code>FlowDirection</code> (string): Direction of flow from start junction to end junction. Must be one of: <code>[\"Supply\", \"Return\", \"Unspecified\"]</code>.</li> </ul>"},{"location":"schema/electrical_junction_properties/","title":"URBANopt Electrical Junction","text":"<p>Schema for an URBANopt Electrical Junction object</p>"},{"location":"schema/electrical_junction_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string, required): Unique id used to refer to this feature within this dataset.</li> <li><code>project_id</code> (string): Project which this feature belongs to.</li> <li><code>type</code> (string, required): Type of feature. Must be one of: <code>[\"ElectricalJunction\"]</code>.</li> <li><code>source_name</code> (string): Name of the original data source.</li> <li><code>source_id</code> (string): Id of the feature in original data source.</li> <li><code>name</code> (string): Feature name.</li> <li><code>connector_type</code>: Refer to #/definitions/ElectricalJunctionType.</li> <li><code>buildingId</code> (string): Id of building if this junction is inside a building.</li> <li><code>DSId</code> (string): Id of district system if this junction is inside a district system.</li> <li><code>user_data</code>: Arbitrary user data.</li> </ul>"},{"location":"schema/electrical_junction_properties/#definitions","title":"Definitions","text":"<ul> <li><code>ElectricalJunctionType</code> (string): Type of electrical junction. Must be one of: <code>[\"ElectricalJunction\"]</code>.</li> </ul>"},{"location":"schema/building_properties/","title":"URBANopt Building","text":"<p>Schema for an URBANopt Building object. Fields prefaced with [unused] in the description are placeholders (or informational) and are not actually connected in the GMT.</p>"},{"location":"schema/building_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string): Unique id used to refer to this feature within this dataset.</li> <li><code>project_id</code> (string): [unused] Project which this feature belongs to.</li> <li><code>type</code> (string): Type of feature. Must be one of: <code>[\"Building\"]</code>.</li> <li><code>source_name</code> (string): [unused] Name of the original data source.</li> <li><code>source_id</code> (string): [unused] Id of the feature in original data source.</li> <li><code>name</code> (string): [unused] Feature name.</li> <li><code>legal_name</code> (string): [unused] Legal name used to identify this feature.</li> <li><code>address</code> (string): [unused] Street address.</li> <li><code>building_status</code> (string): [unused] Building status. Must be one of: <code>[\"Proposed\", \"Existing\"]</code>.</li> <li><code>detailed_model_filename</code> (string): [unused] Name of a detailed model which can be loaded from disk as a seed model or complete model. Mapper class decides which measures to disable if this is present.</li> <li><code>weather_filename</code> (string): [unused] Name of EPW weather file for this building.  Defaults to site's weather_filename.</li> <li><code>tariff_filename</code> (string): [unused] Name of the tariff file for this building.  Defaults to site's tariff_filename.</li> <li><code>surface_elevation</code> (number): [unused] The surface elevation (above NAVD88 datum) of the building (ft).  This is the elevation of the ground at the building location, any below ground stories will be lower than this. Defaults to site's surface_elevation.</li> <li><code>timesteps_per_hour</code> (integer): [unused] Number of timesteps per hour for energy simulations. Defaults to site's timesteps_per_hour. Minimum: <code>1</code>. Maximum: <code>60</code>.</li> <li><code>begin_date</code> (string): [unused] Date to begin simulation, format YYYY-MM-DD. Defaults to site's begin_date.</li> <li><code>end_date</code> (string): [unused] Date to end simulation, format YYYY-MM-DD. Defaults to site's end_date.</li> <li><code>climate_zone</code> (string): [unused] ASHRAE 169 climate zone. Defaults to site's climate_zone.</li> <li><code>cec_climate_zone</code> (string): [unused] CEC Title24 climate zone. Defaults to site's cec_climate_zone.</li> <li><code>floor_area</code> (number): Usable floor area (ft^2). Required for residential buildings, this represents conditioned floor area.</li> <li><code>number_of_stories</code> (integer): The maximum number of building stories, sum of number of above and below ground stories.</li> <li><code>number_of_stories_above_ground</code> (integer): The number of building stories above ground. Defaults to number_of_stories. Required for residential buildings.</li> <li><code>maximum_roof_height</code> (number): [unused] Maximum height of the roof relative to surface elevation (ft).</li> <li><code>roof_type</code> (string): [unused] The type of roof. Defaults to flat. Must be one of: <code>[\"Flat\", \"Gable\", \"Hip\"]</code>.</li> <li><code>foundation_type</code>: Refer to #/definitions/foundationType.</li> <li><code>attic_type</code>: Refer to #/definitions/atticType.</li> <li><code>footprint_area</code> (number): [unused] Area of the footprint (ft^2).  Calculated on export.</li> <li><code>footprint_perimeter</code> (number): [unused] Perimeter of the footprint (ft). Calculated on export.</li> <li><code>year_built</code> (integer): The year construction of the building was completed. Can be in the future to indicate future build out. Defaults to current year.</li> <li><code>template</code>: Refer to #/definitions/templateType.</li> <li><code>building_type</code>: Refer to #/definitions/buildingType.</li> <li><code>system_type</code>: Refer to #/definitions/systemType.</li> <li><code>heating_system_fuel_type</code>: Refer to #/definitions/heatingSystemFuelType.</li> <li><code>weekday_start_time</code> (string): [unused] Weekday operating hours start time in 08:30 format, using 24-hr clock. Leave blank to use default.</li> <li><code>weekday_duration</code> (string): [unused] Length of weekend operating hours in 08:30 format, up to 24:00.</li> <li><code>weekend_start_time</code> (string): [unused] Weekend operating hours start time in 08:30 format, using 24-hr clock. Leave blank to use default.</li> <li><code>weekend_duration</code> (string): [unused] Length of weekend operating hours in 08:30 format, up to 24:00.</li> <li><code>mixed_type_1</code>: Refer to #/definitions/buildingType.</li> <li><code>mixed_type_1_percentage</code> (number): [unused] Percentage of 1st mixed building space type. Only used when building_type is Mixed use. Minimum: <code>0</code>. Maximum: <code>100</code>.</li> <li><code>mixed_type_2</code>: Refer to #/definitions/buildingType.</li> <li><code>mixed_type_2_percentage</code> (number): [unused] Percentage of 2nd mixed building space type. Only used when building_type is Mixed use. Minimum: <code>0</code>. Maximum: <code>100</code>.</li> <li><code>mixed_type_3</code>: Refer to #/definitions/buildingType.</li> <li><code>mixed_type_3_percentage</code> (number): [unused] Percentage of 3rd mixed building space type. Only used when building_type is Mixed use. Minimum: <code>0</code>. Maximum: <code>100</code>.</li> <li><code>mixed_type_4</code>: Refer to #/definitions/buildingType.</li> <li><code>mixed_type_4_percentage</code> (number): [unused] Percentage of 4th mixed building space type. Only used when building_type is Mixed use. Minimum: <code>0</code>. Maximum: <code>100</code>.</li> <li><code>number_of_residential_units</code> (integer): [unused] Total number of residential units in the building. Required for single-family attached and multifamily residential buildings.</li> <li><code>number_of_bedrooms</code> (integer): [unused] Total number of bedrooms in the building. Required for residential buildings. Must be divisible by the number of residential units.</li> <li><code>exterior_lighting_zone</code> (string): [unused] Choice of exterior lighting zone. Must be one of: <code>[\"0 - Undeveloped Areas Parks\", \"1 - Developed Areas Parks\", \"2 - Neighborhood\", \"3 - All Other Areas\", \"4 - High Activity\"]</code>.</li> <li><code>onsite_parking_fraction</code> (number): [unused] Fraction of building parking to include in this model.  Choose 1 to include exterior lights for parking in this building model.  Choose 0 if parking is modeled separately. Minimum: <code>0</code>. Maximum: <code>1</code>.</li> <li><code>power_factor</code> (number): [unused] Ratio of the real power used by building to the apparent power seen by grid. Minimum: <code>0</code>.</li> <li><code>user_data</code>: [unused] Arbitrary user data.</li> <li><code>ev_charging</code> (boolean): [unused] Should be set to true if EV charging is associated with the building.</li> <li><code>ev_charging_station_type</code> (string): [unused] Indicates whether EV charging associated with the building is for Typical Home, Public or Work charging station. Must be one of: <code>[\"Typical Home\", \"Typical Public\", \"Typical Work\"]</code>.</li> <li><code>delay_type</code> (string): [unused] Adds workplace charging flexibility for different scenarios. Min delay scenario indicates EV charging immediately upon arriving to work, Max delay indicates not charging until necessary thereby shifting EV charging load to later in the day and Min power indicates charging EVs at a minimum rate over the parking event. Must be one of: <code>[\"Min Delay\", \"Max Delay\", \"Min Power\"]</code>.</li> <li><code>ev_charging_behavior</code> (string): [unused] Describes scenarios for EV charging behavior, Business as Usual implies home dominant charging behavior, Free Workplace Charging at Project Site implies peak power draw from EV charging during morning hours due to EV charging at workplaces and Free Workplace Charging Across Metro Area scenario reduces Home EV charging relative to Free Workplace Charging at Project Site for residents who work elsewhere and can charge their vehicles for free at those workplaces. Must be one of: <code>[\"Business as Usual\", \"Free Workplace Charging at Project Site\", \"Free Workplace Charging Across Metro Area\"]</code>.</li> <li><code>ev_percent</code> (number): Denotes the % of vehicles parked at the building that are EVs.</li> <li><code>ev_curtailment_frac</code> (number): [unused] Fraction between 0 and 1 that denotes curtailment of EV charging load to better align EV charging with expected energy production from a solar PV system.</li> </ul>"},{"location":"schema/building_properties/#definitions","title":"Definitions","text":"<ul> <li><code>buildingType</code> (string): [unused] Primary building space type. Must be one of: <code>[\"Single-Family Detached\", \"Single-Family Attached\", \"Multifamily\", \"Single-Family\", \"Multifamily (2 to 4 units)\", \"Multifamily (5 or more units)\", \"Vacant\", \"Office\", \"Laboratory\", \"Nonrefrigerated warehouse\", \"Food sales\", \"Public order and safety\", \"Outpatient health care\", \"Refrigerated warehouse\", \"Religious worship\", \"Public assembly\", \"Education\", \"Food service\", \"Inpatient health care\", \"Nursing\", \"Lodging\", \"Strip shopping mall\", \"Enclosed mall\", \"Retail other than mall\", \"Service\", \"Mixed use\", \"Uncovered Parking\", \"Covered Parking\", \"null\"]</code>.</li> <li><code>systemType</code> (string): [unused] Building HVAC system type. Must be one of: <code>[\"PTAC with baseboard electric\", \"PTAC with baseboard gas boiler\", \"PTAC with baseboard district hot water\", \"PTAC with gas unit heaters\", \"PTAC with electric coil\", \"PTAC with gas coil\", \"PTAC with gas boiler\", \"PTAC with no heat\", \"PTAC with district hot water\", \"PTAC with central air source heat pump\", \"PTHP\", \"PSZ-AC with gas coil\", \"PSZ-AC with baseboard electric\", \"PSZ-AC with no heat\", \"PSZ-AC with district hot water\", \"PSZ-AC with central air source heat pump\", \"PSZ-HP\", \"Fan coil district chilled water with no heat\", \"Fan coil district chilled water with boiler\", \"Fan coil district chilled water with central air source heat pump\", \"Fan coil district chilled water with gas unit heaters\", \"Fan coil district chilled water with baseboard electric\", \"Fan coil district chilled water with district hot water\", \"Fan coil chiller with district hot water\", \"Fan coil air-cooled chiller with district hot water\", \"Fan coil chiller with boiler\", \"Fan coil air-cooled chiller with boiler\", \"Fan coil chiller with central air source heat pump\", \"Fan coil air-cooled chiller with central air source heat pump\", \"Fan coil chiller with no heat\", \"DOAS with fan coil district chilled water with no heat\", \"DOAS with fan coil district chilled water and boiler\", \"DOAS with fan coil district chilled water with central air source heat pump\", \"DOAS with fan coil district chilled water with gas unit heaters\", \"DOAS with fan coil district chilled water with baseboard electric\", \"DOAS with fan coil district chilled water with district hot water\", \"DOAS with fan coil chiller with district hot water\", \"DOAS with fan coil air-cooled chiller with district hot water\", \"DOAS with fan coil air-cooled chiller with boiler\", \"DOAS with fan coil chiller with central air source heat pump\", \"DOAS with fan coil air-cooled chiller with central air source heat pump\", \"DOAS with fan coil chiller with no heat\", \"DOAS with VRF\", \"VRF\", \"DOAS with water source heat pumps with ground source heat pump\", \"Forced air furnace\", \"Baseboard district hot water\", \"Baseboard electric\", \"Baseboard gas boiler\", \"Baseboard central air source heat pump\", \"Window AC with no heat\", \"Window AC with forced air furnace\", \"Window AC with baseboard district hot water\", \"Window AC with baseboard electric\", \"Window AC with unit heaters\", \"Window AC with baseboard gas boiler\", \"Window AC with baseboard central air source heat pump\", \"Direct evap coolers with baseboard district hot water\", \"Direct evap coolers with baseboard electric\", \"Direct evap coolers with baseboard gas boiler\", \"Direct evap coolers with baseboard central air source heat pump\", \"Direct evap coolers with no heat\", \"Direct evap coolers with gas unit heaters\", \"Direct evap coolers with forced air furnace\", \"Gas unit heaters\", \"VAV chiller with gas boiler reheat\", \"VAV chiller with gas coil reheat\", \"VAV chiller with central air source heat pump reheat\", \"VAV chiller with PFP boxes\", \"VAV air-cooled chiller with gas boiler reheat\", \"VAV air-cooled chiller with central air source heat pump reheat\", \"VAV air-cooled chiller with district hot water reheat\", \"VAV air-cooled chiller with gas coil reheat\", \"VAV air-cooled chiller with no reheat with gas unit heaters\", \"VAV district chilled water with gas boiler reheat\", \"VAV district chilled water with central air source heat pump reheat\", \"VAV district chilled water with no reheat with zone heat pump\", \"VAV chiller with no reheat with baseboard electric\", \"VAV air-cooled chiller with no reheat with zone heat pump\", \"VAV district chilled water with district hot water reheat\", \"VAV district chilled water with gas coil reheat\", \"PVAV with gas heat with electric reheat\", \"PVAV with central air source heat pump reheat\", \"PVAV with PFP boxes\", \"Residential - electric resistance and no cooling\", \"Residential - electric resistance and central air conditioner\", \"Residential - electric resistance and room air conditioner\", \"Residential - electric resistance and evaporative cooler\", \"Residential - furnace and no cooling\", \"Residential - furnace and central air conditioner\", \"Residential - furnace and room air conditioner\", \"Residential - furnace and evaporative cooler\", \"Residential - boiler and no cooling\", \"Residential - boiler and central air conditioner\", \"Residential - boiler and room air conditioner\", \"Residential - boiler and evaporative cooler\", \"Residential - air-to-air heat pump\", \"Residential - mini-split heat pump\", \"Residential - ground-to-air heat pump\"]</code>.</li> <li><code>heatingSystemFuelType</code> (string): [unused] The fuel type of the heating system. This does not apply for certain system types (e.g., electric resistance or heat pumps). Must be one of: <code>[\"electricity\", \"natural gas\", \"fuel oil\", \"propane\", \"wood\"]</code>.</li> <li><code>templateType</code> (string): [unused] Standard template applied to building. Default to site's default_template. Must be one of: <code>[\"DOE Ref Pre-1980\", \"DOE Ref 1980-2004\", \"90.1-2004\", \"90.1-2007\", \"90.1-2010\", \"90.1-2013\", \"NREL ZNE Ready 2017\", \"DEER Pre-1975\", \"DEER 1985\", \"DEER 1996\", \"DEER 2003\", \"DEER 2007\", \"DEER 2011\", \"DEER 2014\", \"DEER 2015\", \"DEER 2017\", \"DEER 2020\", \"DEER 2025\", \"DEER 2030\", \"DEER 2035\", \"DEER 2040\", \"DEER 2045\", \"DEER 2050\", \"DEER 2055\", \"DEER 2060\", \"DEER 2065\", \"DEER 2070\", \"DEER 2075\", \"Residential IECC 2006 - Customizable Template Sep 2020\", \"Residential IECC 2009 - Customizable Template Sep 2020\", \"Residential IECC 2012 - Customizable Template Sep 2020\", \"Residential IECC 2015 - Customizable Template Sep 2020\", \"Residential IECC 2018 - Customizable Template Sep 2020\"]</code>.</li> <li><code>foundationType</code> (string): [unused] The foundation type of the building. Required for residential buildings. Must be one of: <code>[\"slab\", \"crawlspace - vented\", \"crawlspace - unvented\", \"basement - unconditioned\", \"basement - conditioned\", \"ambient\"]</code>.</li> <li><code>atticType</code> (string): [unused] The attic type of the building. Required for single-family residential buildings. Must be one of: <code>[\"attic - vented\", \"attic - unvented\", \"attic - conditioned\", \"flat roof\"]</code>.</li> </ul>"},{"location":"schema/region_properties/","title":"URBANopt Region","text":"<p>Schema for an URBANopt Region object</p>"},{"location":"schema/region_properties/#properties","title":"Properties","text":"<ul> <li><code>id</code> (string): Unique id used to refer to this feature within this dataset.</li> <li><code>project_id</code> (string): Project which this feature belongs to.</li> <li><code>type</code> (string, required): Type of feature. Must be one of: <code>[\"Region\"]</code>.</li> <li><code>region_type</code> (string, required): Type of region. Must be one of: <code>[\"Taxlot\", \"Park\", \"Road\", \"Lake\", \"Obstacle\"]</code>.</li> <li><code>source_name</code> (string): Name of the original data source.</li> <li><code>source_id</code> (string): Id of the feature in original data source.</li> <li><code>name</code> (string): Feature name.</li> <li><code>legal_name</code> (string): Legal name used to identify this feature.</li> <li><code>address</code> (string): Street address.</li> <li><code>footprint_area</code> (number): Area of the footprint (ft^2).  Calculated on export.</li> <li><code>footprint_perimeter</code> (number): Perimeter of the footprint (ft). Calculated on export.</li> <li><code>exterior_lighting_zone</code> (string): Choice of exterior lighting zone. Must be one of: <code>[\"0 - Undeveloped Areas Parks\", \"1 - Developed Areas Parks\", \"2 - Neighborhood\", \"3 - All Other Areas\", \"4 - High Activity\"]</code>.</li> <li><code>taxlot_zoning</code> (string): Type of zoning if this feature is a taxlot. Must be one of: <code>[\"Vacant\", \"Mixed\", \"Residential\", \"Commercial\", \"OpenSpace\"]</code>.</li> <li><code>user_data</code>: Arbitrary user data.</li> </ul>"}]}